

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 29 12:48:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	text39,local,class=CODE,merge=1,delta=2
    50                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1508 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011D                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  020D                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0498                     	;# 
   189  0498                     	;# 
   190  0499                     	;# 
   191  049A                     	;# 
   192  049B                     	;# 
   193  049B                     	;# 
   194  049C                     	;# 
   195  049D                     	;# 
   196  049E                     	;# 
   197  049F                     	;# 
   198  0611                     	;# 
   199  0612                     	;# 
   200  0613                     	;# 
   201  0613                     	;# 
   202  0614                     	;# 
   203  0615                     	;# 
   204  0616                     	;# 
   205  0616                     	;# 
   206  0617                     	;# 
   207  0618                     	;# 
   208  0619                     	;# 
   209  0619                     	;# 
   210  061A                     	;# 
   211  061B                     	;# 
   212  061C                     	;# 
   213  061C                     	;# 
   214  0691                     	;# 
   215  0692                     	;# 
   216  0693                     	;# 
   217  0694                     	;# 
   218  0695                     	;# 
   219  0F0F                     	;# 
   220  0F10                     	;# 
   221  0F11                     	;# 
   222  0F12                     	;# 
   223  0F13                     	;# 
   224  0F14                     	;# 
   225  0F15                     	;# 
   226  0F16                     	;# 
   227  0F17                     	;# 
   228  0F18                     	;# 
   229  0F19                     	;# 
   230  0F1A                     	;# 
   231  0F1B                     	;# 
   232  0F1C                     	;# 
   233  0F1D                     	;# 
   234  0F1E                     	;# 
   235  0F1F                     	;# 
   236  0F20                     	;# 
   237  0F21                     	;# 
   238  0F22                     	;# 
   239  0F23                     	;# 
   240  0F24                     	;# 
   241  0F25                     	;# 
   242  0F26                     	;# 
   243  0F27                     	;# 
   244  0F28                     	;# 
   245  0F29                     	;# 
   246  0F2A                     	;# 
   247  0F2B                     	;# 
   248  0F2C                     	;# 
   249  0F2D                     	;# 
   250  0F2E                     	;# 
   251  0F2F                     	;# 
   252  0F8C                     	;# 
   253  0F8D                     	;# 
   254  0F91                     	;# 
   255  0F95                     	;# 
   256  0F96                     	;# 
   257  0F97                     	;# 
   258  0F9C                     	;# 
   259  0F9D                     	;# 
   260  0F9E                     	;# 
   261  0FE3                     	;# 
   262  0FE4                     	;# 
   263  0FE5                     	;# 
   264  0FE6                     	;# 
   265  0FE7                     	;# 
   266  0FE8                     	;# 
   267  0FE9                     	;# 
   268  0FEA                     	;# 
   269  0FEB                     	;# 
   270  0FED                     	;# 
   271  0FEE                     	;# 
   272  0FEF                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011D                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  018E                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0197                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019C                     	;# 
   347  019D                     	;# 
   348  019E                     	;# 
   349  019F                     	;# 
   350  020C                     	;# 
   351  020D                     	;# 
   352  0211                     	;# 
   353  0211                     	;# 
   354  0212                     	;# 
   355  0212                     	;# 
   356  0213                     	;# 
   357  0213                     	;# 
   358  0214                     	;# 
   359  0214                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0216                     	;# 
   365  0217                     	;# 
   366  0217                     	;# 
   367  0391                     	;# 
   368  0392                     	;# 
   369  0393                     	;# 
   370  0394                     	;# 
   371  0395                     	;# 
   372  0396                     	;# 
   373  0498                     	;# 
   374  0498                     	;# 
   375  0499                     	;# 
   376  049A                     	;# 
   377  049B                     	;# 
   378  049B                     	;# 
   379  049C                     	;# 
   380  049D                     	;# 
   381  049E                     	;# 
   382  049F                     	;# 
   383  0611                     	;# 
   384  0612                     	;# 
   385  0613                     	;# 
   386  0613                     	;# 
   387  0614                     	;# 
   388  0615                     	;# 
   389  0616                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0618                     	;# 
   393  0619                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061C                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  0695                     	;# 
   404  0F0F                     	;# 
   405  0F10                     	;# 
   406  0F11                     	;# 
   407  0F12                     	;# 
   408  0F13                     	;# 
   409  0F14                     	;# 
   410  0F15                     	;# 
   411  0F16                     	;# 
   412  0F17                     	;# 
   413  0F18                     	;# 
   414  0F19                     	;# 
   415  0F1A                     	;# 
   416  0F1B                     	;# 
   417  0F1C                     	;# 
   418  0F1D                     	;# 
   419  0F1E                     	;# 
   420  0F1F                     	;# 
   421  0F20                     	;# 
   422  0F21                     	;# 
   423  0F22                     	;# 
   424  0F23                     	;# 
   425  0F24                     	;# 
   426  0F25                     	;# 
   427  0F26                     	;# 
   428  0F27                     	;# 
   429  0F28                     	;# 
   430  0F29                     	;# 
   431  0F2A                     	;# 
   432  0F2B                     	;# 
   433  0F2C                     	;# 
   434  0F2D                     	;# 
   435  0F2E                     	;# 
   436  0F2F                     	;# 
   437  0F8C                     	;# 
   438  0F8D                     	;# 
   439  0F91                     	;# 
   440  0F95                     	;# 
   441  0F96                     	;# 
   442  0F97                     	;# 
   443  0F9C                     	;# 
   444  0F9D                     	;# 
   445  0F9E                     	;# 
   446  0FE3                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0095                     	;# 
   492  0096                     	;# 
   493  0097                     	;# 
   494  0099                     	;# 
   495  009A                     	;# 
   496  009B                     	;# 
   497  009B                     	;# 
   498  009C                     	;# 
   499  009D                     	;# 
   500  009E                     	;# 
   501  009F                     	;# 
   502  010C                     	;# 
   503  010D                     	;# 
   504  010E                     	;# 
   505  0111                     	;# 
   506  0112                     	;# 
   507  0113                     	;# 
   508  0114                     	;# 
   509  0115                     	;# 
   510  0116                     	;# 
   511  0117                     	;# 
   512  0118                     	;# 
   513  0119                     	;# 
   514  011D                     	;# 
   515  018C                     	;# 
   516  018D                     	;# 
   517  018E                     	;# 
   518  0191                     	;# 
   519  0191                     	;# 
   520  0192                     	;# 
   521  0193                     	;# 
   522  0193                     	;# 
   523  0194                     	;# 
   524  0195                     	;# 
   525  0196                     	;# 
   526  0197                     	;# 
   527  0199                     	;# 
   528  019A                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020D                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0216                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0217                     	;# 
   552  0391                     	;# 
   553  0392                     	;# 
   554  0393                     	;# 
   555  0394                     	;# 
   556  0395                     	;# 
   557  0396                     	;# 
   558  0498                     	;# 
   559  0498                     	;# 
   560  0499                     	;# 
   561  049A                     	;# 
   562  049B                     	;# 
   563  049B                     	;# 
   564  049C                     	;# 
   565  049D                     	;# 
   566  049E                     	;# 
   567  049F                     	;# 
   568  0611                     	;# 
   569  0612                     	;# 
   570  0613                     	;# 
   571  0613                     	;# 
   572  0614                     	;# 
   573  0615                     	;# 
   574  0616                     	;# 
   575  0616                     	;# 
   576  0617                     	;# 
   577  0618                     	;# 
   578  0619                     	;# 
   579  0619                     	;# 
   580  061A                     	;# 
   581  061B                     	;# 
   582  061C                     	;# 
   583  061C                     	;# 
   584  0691                     	;# 
   585  0692                     	;# 
   586  0693                     	;# 
   587  0694                     	;# 
   588  0695                     	;# 
   589  0F0F                     	;# 
   590  0F10                     	;# 
   591  0F11                     	;# 
   592  0F12                     	;# 
   593  0F13                     	;# 
   594  0F14                     	;# 
   595  0F15                     	;# 
   596  0F16                     	;# 
   597  0F17                     	;# 
   598  0F18                     	;# 
   599  0F19                     	;# 
   600  0F1A                     	;# 
   601  0F1B                     	;# 
   602  0F1C                     	;# 
   603  0F1D                     	;# 
   604  0F1E                     	;# 
   605  0F1F                     	;# 
   606  0F20                     	;# 
   607  0F21                     	;# 
   608  0F22                     	;# 
   609  0F23                     	;# 
   610  0F24                     	;# 
   611  0F25                     	;# 
   612  0F26                     	;# 
   613  0F27                     	;# 
   614  0F28                     	;# 
   615  0F29                     	;# 
   616  0F2A                     	;# 
   617  0F2B                     	;# 
   618  0F2C                     	;# 
   619  0F2D                     	;# 
   620  0F2E                     	;# 
   621  0F2F                     	;# 
   622  0F8C                     	;# 
   623  0F8D                     	;# 
   624  0F91                     	;# 
   625  0F95                     	;# 
   626  0F96                     	;# 
   627  0F97                     	;# 
   628  0F9C                     	;# 
   629  0F9D                     	;# 
   630  0F9E                     	;# 
   631  0FE3                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0013                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0016                     	;# 
   664  0017                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0093                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0099                     	;# 
   680  009A                     	;# 
   681  009B                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  009F                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  0111                     	;# 
   691  0112                     	;# 
   692  0113                     	;# 
   693  0114                     	;# 
   694  0115                     	;# 
   695  0116                     	;# 
   696  0117                     	;# 
   697  0118                     	;# 
   698  0119                     	;# 
   699  011D                     	;# 
   700  018C                     	;# 
   701  018D                     	;# 
   702  018E                     	;# 
   703  0191                     	;# 
   704  0191                     	;# 
   705  0192                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0194                     	;# 
   709  0195                     	;# 
   710  0196                     	;# 
   711  0197                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019C                     	;# 
   717  019D                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  0211                     	;# 
   723  0211                     	;# 
   724  0212                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0216                     	;# 
   734  0216                     	;# 
   735  0217                     	;# 
   736  0217                     	;# 
   737  0391                     	;# 
   738  0392                     	;# 
   739  0393                     	;# 
   740  0394                     	;# 
   741  0395                     	;# 
   742  0396                     	;# 
   743  0498                     	;# 
   744  0498                     	;# 
   745  0499                     	;# 
   746  049A                     	;# 
   747  049B                     	;# 
   748  049B                     	;# 
   749  049C                     	;# 
   750  049D                     	;# 
   751  049E                     	;# 
   752  049F                     	;# 
   753  0611                     	;# 
   754  0612                     	;# 
   755  0613                     	;# 
   756  0613                     	;# 
   757  0614                     	;# 
   758  0615                     	;# 
   759  0616                     	;# 
   760  0616                     	;# 
   761  0617                     	;# 
   762  0618                     	;# 
   763  0619                     	;# 
   764  0619                     	;# 
   765  061A                     	;# 
   766  061B                     	;# 
   767  061C                     	;# 
   768  061C                     	;# 
   769  0691                     	;# 
   770  0692                     	;# 
   771  0693                     	;# 
   772  0694                     	;# 
   773  0695                     	;# 
   774  0F0F                     	;# 
   775  0F10                     	;# 
   776  0F11                     	;# 
   777  0F12                     	;# 
   778  0F13                     	;# 
   779  0F14                     	;# 
   780  0F15                     	;# 
   781  0F16                     	;# 
   782  0F17                     	;# 
   783  0F18                     	;# 
   784  0F19                     	;# 
   785  0F1A                     	;# 
   786  0F1B                     	;# 
   787  0F1C                     	;# 
   788  0F1D                     	;# 
   789  0F1E                     	;# 
   790  0F1F                     	;# 
   791  0F20                     	;# 
   792  0F21                     	;# 
   793  0F22                     	;# 
   794  0F23                     	;# 
   795  0F24                     	;# 
   796  0F25                     	;# 
   797  0F26                     	;# 
   798  0F27                     	;# 
   799  0F28                     	;# 
   800  0F29                     	;# 
   801  0F2A                     	;# 
   802  0F2B                     	;# 
   803  0F2C                     	;# 
   804  0F2D                     	;# 
   805  0F2E                     	;# 
   806  0F2F                     	;# 
   807  0F8C                     	;# 
   808  0F8D                     	;# 
   809  0F91                     	;# 
   810  0F95                     	;# 
   811  0F96                     	;# 
   812  0F97                     	;# 
   813  0F9C                     	;# 
   814  0F9D                     	;# 
   815  0F9E                     	;# 
   816  0FE3                     	;# 
   817  0FE4                     	;# 
   818  0FE5                     	;# 
   819  0FE6                     	;# 
   820  0FE7                     	;# 
   821  0FE8                     	;# 
   822  0FE9                     	;# 
   823  0FEA                     	;# 
   824  0FEB                     	;# 
   825  0FED                     	;# 
   826  0FEE                     	;# 
   827  0FEF                     	;# 
   828  0000                     	;# 
   829  0001                     	;# 
   830  0002                     	;# 
   831  0003                     	;# 
   832  0004                     	;# 
   833  0005                     	;# 
   834  0006                     	;# 
   835  0007                     	;# 
   836  0008                     	;# 
   837  0009                     	;# 
   838  000A                     	;# 
   839  000B                     	;# 
   840  000C                     	;# 
   841  000D                     	;# 
   842  000E                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0013                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0016                     	;# 
   849  0017                     	;# 
   850  0018                     	;# 
   851  0019                     	;# 
   852  001A                     	;# 
   853  001B                     	;# 
   854  001C                     	;# 
   855  008C                     	;# 
   856  008D                     	;# 
   857  008E                     	;# 
   858  0091                     	;# 
   859  0092                     	;# 
   860  0093                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0099                     	;# 
   865  009A                     	;# 
   866  009B                     	;# 
   867  009B                     	;# 
   868  009C                     	;# 
   869  009D                     	;# 
   870  009E                     	;# 
   871  009F                     	;# 
   872  010C                     	;# 
   873  010D                     	;# 
   874  010E                     	;# 
   875  0111                     	;# 
   876  0112                     	;# 
   877  0113                     	;# 
   878  0114                     	;# 
   879  0115                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  0118                     	;# 
   883  0119                     	;# 
   884  011D                     	;# 
   885  018C                     	;# 
   886  018D                     	;# 
   887  018E                     	;# 
   888  0191                     	;# 
   889  0191                     	;# 
   890  0192                     	;# 
   891  0193                     	;# 
   892  0193                     	;# 
   893  0194                     	;# 
   894  0195                     	;# 
   895  0196                     	;# 
   896  0197                     	;# 
   897  0199                     	;# 
   898  019A                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019D                     	;# 
   903  019E                     	;# 
   904  019F                     	;# 
   905  020C                     	;# 
   906  020D                     	;# 
   907  0211                     	;# 
   908  0211                     	;# 
   909  0212                     	;# 
   910  0212                     	;# 
   911  0213                     	;# 
   912  0213                     	;# 
   913  0214                     	;# 
   914  0214                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0216                     	;# 
   919  0216                     	;# 
   920  0217                     	;# 
   921  0217                     	;# 
   922  0391                     	;# 
   923  0392                     	;# 
   924  0393                     	;# 
   925  0394                     	;# 
   926  0395                     	;# 
   927  0396                     	;# 
   928  0498                     	;# 
   929  0498                     	;# 
   930  0499                     	;# 
   931  049A                     	;# 
   932  049B                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  049E                     	;# 
   937  049F                     	;# 
   938  0611                     	;# 
   939  0612                     	;# 
   940  0613                     	;# 
   941  0613                     	;# 
   942  0614                     	;# 
   943  0615                     	;# 
   944  0616                     	;# 
   945  0616                     	;# 
   946  0617                     	;# 
   947  0618                     	;# 
   948  0619                     	;# 
   949  0619                     	;# 
   950  061A                     	;# 
   951  061B                     	;# 
   952  061C                     	;# 
   953  061C                     	;# 
   954  0691                     	;# 
   955  0692                     	;# 
   956  0693                     	;# 
   957  0694                     	;# 
   958  0695                     	;# 
   959  0F0F                     	;# 
   960  0F10                     	;# 
   961  0F11                     	;# 
   962  0F12                     	;# 
   963  0F13                     	;# 
   964  0F14                     	;# 
   965  0F15                     	;# 
   966  0F16                     	;# 
   967  0F17                     	;# 
   968  0F18                     	;# 
   969  0F19                     	;# 
   970  0F1A                     	;# 
   971  0F1B                     	;# 
   972  0F1C                     	;# 
   973  0F1D                     	;# 
   974  0F1E                     	;# 
   975  0F1F                     	;# 
   976  0F20                     	;# 
   977  0F21                     	;# 
   978  0F22                     	;# 
   979  0F23                     	;# 
   980  0F24                     	;# 
   981  0F25                     	;# 
   982  0F26                     	;# 
   983  0F27                     	;# 
   984  0F28                     	;# 
   985  0F29                     	;# 
   986  0F2A                     	;# 
   987  0F2B                     	;# 
   988  0F2C                     	;# 
   989  0F2D                     	;# 
   990  0F2E                     	;# 
   991  0F2F                     	;# 
   992  0F8C                     	;# 
   993  0F8D                     	;# 
   994  0F91                     	;# 
   995  0F95                     	;# 
   996  0F96                     	;# 
   997  0F97                     	;# 
   998  0F9C                     	;# 
   999  0F9D                     	;# 
  1000  0F9E                     	;# 
  1001  0FE3                     	;# 
  1002  0FE4                     	;# 
  1003  0FE5                     	;# 
  1004  0FE6                     	;# 
  1005  0FE7                     	;# 
  1006  0FE8                     	;# 
  1007  0FE9                     	;# 
  1008  0FEA                     	;# 
  1009  0FEB                     	;# 
  1010  0FED                     	;# 
  1011  0FEE                     	;# 
  1012  0FEF                     	;# 
  1013  0000                     	;# 
  1014  0001                     	;# 
  1015  0002                     	;# 
  1016  0003                     	;# 
  1017  0004                     	;# 
  1018  0005                     	;# 
  1019  0006                     	;# 
  1020  0007                     	;# 
  1021  0008                     	;# 
  1022  0009                     	;# 
  1023  000A                     	;# 
  1024  000B                     	;# 
  1025  000C                     	;# 
  1026  000D                     	;# 
  1027  000E                     	;# 
  1028  0011                     	;# 
  1029  0012                     	;# 
  1030  0013                     	;# 
  1031  0015                     	;# 
  1032  0016                     	;# 
  1033  0016                     	;# 
  1034  0017                     	;# 
  1035  0018                     	;# 
  1036  0019                     	;# 
  1037  001A                     	;# 
  1038  001B                     	;# 
  1039  001C                     	;# 
  1040  008C                     	;# 
  1041  008D                     	;# 
  1042  008E                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0095                     	;# 
  1047  0096                     	;# 
  1048  0097                     	;# 
  1049  0099                     	;# 
  1050  009A                     	;# 
  1051  009B                     	;# 
  1052  009B                     	;# 
  1053  009C                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  010C                     	;# 
  1058  010D                     	;# 
  1059  010E                     	;# 
  1060  0111                     	;# 
  1061  0112                     	;# 
  1062  0113                     	;# 
  1063  0114                     	;# 
  1064  0115                     	;# 
  1065  0116                     	;# 
  1066  0117                     	;# 
  1067  0118                     	;# 
  1068  0119                     	;# 
  1069  011D                     	;# 
  1070  018C                     	;# 
  1071  018D                     	;# 
  1072  018E                     	;# 
  1073  0191                     	;# 
  1074  0191                     	;# 
  1075  0192                     	;# 
  1076  0193                     	;# 
  1077  0193                     	;# 
  1078  0194                     	;# 
  1079  0195                     	;# 
  1080  0196                     	;# 
  1081  0197                     	;# 
  1082  0199                     	;# 
  1083  019A                     	;# 
  1084  019B                     	;# 
  1085  019B                     	;# 
  1086  019C                     	;# 
  1087  019D                     	;# 
  1088  019E                     	;# 
  1089  019F                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  0211                     	;# 
  1093  0211                     	;# 
  1094  0212                     	;# 
  1095  0212                     	;# 
  1096  0213                     	;# 
  1097  0213                     	;# 
  1098  0214                     	;# 
  1099  0214                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0215                     	;# 
  1103  0216                     	;# 
  1104  0216                     	;# 
  1105  0217                     	;# 
  1106  0217                     	;# 
  1107  0391                     	;# 
  1108  0392                     	;# 
  1109  0393                     	;# 
  1110  0394                     	;# 
  1111  0395                     	;# 
  1112  0396                     	;# 
  1113  0498                     	;# 
  1114  0498                     	;# 
  1115  0499                     	;# 
  1116  049A                     	;# 
  1117  049B                     	;# 
  1118  049B                     	;# 
  1119  049C                     	;# 
  1120  049D                     	;# 
  1121  049E                     	;# 
  1122  049F                     	;# 
  1123  0611                     	;# 
  1124  0612                     	;# 
  1125  0613                     	;# 
  1126  0613                     	;# 
  1127  0614                     	;# 
  1128  0615                     	;# 
  1129  0616                     	;# 
  1130  0616                     	;# 
  1131  0617                     	;# 
  1132  0618                     	;# 
  1133  0619                     	;# 
  1134  0619                     	;# 
  1135  061A                     	;# 
  1136  061B                     	;# 
  1137  061C                     	;# 
  1138  061C                     	;# 
  1139  0691                     	;# 
  1140  0692                     	;# 
  1141  0693                     	;# 
  1142  0694                     	;# 
  1143  0695                     	;# 
  1144  0F0F                     	;# 
  1145  0F10                     	;# 
  1146  0F11                     	;# 
  1147  0F12                     	;# 
  1148  0F13                     	;# 
  1149  0F14                     	;# 
  1150  0F15                     	;# 
  1151  0F16                     	;# 
  1152  0F17                     	;# 
  1153  0F18                     	;# 
  1154  0F19                     	;# 
  1155  0F1A                     	;# 
  1156  0F1B                     	;# 
  1157  0F1C                     	;# 
  1158  0F1D                     	;# 
  1159  0F1E                     	;# 
  1160  0F1F                     	;# 
  1161  0F20                     	;# 
  1162  0F21                     	;# 
  1163  0F22                     	;# 
  1164  0F23                     	;# 
  1165  0F24                     	;# 
  1166  0F25                     	;# 
  1167  0F26                     	;# 
  1168  0F27                     	;# 
  1169  0F28                     	;# 
  1170  0F29                     	;# 
  1171  0F2A                     	;# 
  1172  0F2B                     	;# 
  1173  0F2C                     	;# 
  1174  0F2D                     	;# 
  1175  0F2E                     	;# 
  1176  0F2F                     	;# 
  1177  0F8C                     	;# 
  1178  0F8D                     	;# 
  1179  0F91                     	;# 
  1180  0F95                     	;# 
  1181  0F96                     	;# 
  1182  0F97                     	;# 
  1183  0F9C                     	;# 
  1184  0F9D                     	;# 
  1185  0F9E                     	;# 
  1186  0FE3                     	;# 
  1187  0FE4                     	;# 
  1188  0FE5                     	;# 
  1189  0FE6                     	;# 
  1190  0FE7                     	;# 
  1191  0FE8                     	;# 
  1192  0FE9                     	;# 
  1193  0FEA                     	;# 
  1194  0FEB                     	;# 
  1195  0FED                     	;# 
  1196  0FEE                     	;# 
  1197  0FEF                     	;# 
  1198                           
  1199 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  1200  0000                     
  1201 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  1202  0011                     _PIR1bits	set	17
  1203  0012                     _PIR2bits	set	18
  1204  000B                     _INTCONbits	set	11
  1205  009D                     _ADCON0bits	set	157
  1206  009D                     _ADCON0	set	157
  1207  009C                     _ADRESH	set	156
  1208  009B                     _ADRESL	set	155
  1209  009F                     _ADCON2	set	159
  1210  009E                     _ADCON1	set	158
  1211  0097                     _WDTCON	set	151
  1212  0099                     _OSCCON	set	153
  1213  0095                     _OPTION_REGbits	set	149
  1214  008E                     _TRISC	set	142
  1215  008D                     _TRISB	set	141
  1216  008C                     _TRISA	set	140
  1217  0091                     _PIE1bits	set	145
  1218  0092                     _PIE2bits	set	146
  1219  010E                     _LATCbits	set	270
  1220  010C                     _LATAbits	set	268
  1221  0116                     _BORCON	set	278
  1222  011D                     _APFCON	set	285
  1223  010E                     _LATC	set	270
  1224  010D                     _LATB	set	269
  1225  010C                     _LATA	set	268
  1226  018C                     _ANSELA	set	396
  1227  018D                     _ANSELB	set	397
  1228  018E                     _ANSELC	set	398
  1229  0211                     _SSP1BUF	set	529
  1230  0216                     _SSP1CON2bits	set	534
  1231  0214                     _SSP1STATbits	set	532
  1232  0213                     _SSP1MSK	set	531
  1233  0212                     _SSP1ADD	set	530
  1234  0215                     _SSP1CON1bits	set	533
  1235  0216                     _SSP1CON2	set	534
  1236  0215                     _SSP1CON1	set	533
  1237  0214                     _SSP1STAT	set	532
  1238  020C                     _WPUA	set	524
  1239  020D                     _WPUB	set	525
  1240                           
  1241                           	psect	cinit
  1242  0029                     start_initialization:	
  1243                           ; #config settings
  1244                           
  1245  0029                     __initialization:
  1246                           
  1247                           ; Clear objects allocated to COMMON
  1248  0029  01F0               	clrf	__pbssCOMMON& (0+127)
  1249  002A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1250  002B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1251  002C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1252  002D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1253  002E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1254                           
  1255                           ; Clear objects allocated to BANK0
  1256  002F  3020               	movlw	low __pbssBANK0
  1257  0030  0084               	movwf	4
  1258  0031  3000               	movlw	high __pbssBANK0
  1259  0032  0085               	movwf	5
  1260  0033  3011               	movlw	17
  1261  0034  3182  2280  3180   	fcall	clear_ram0
  1262  0037                     end_of_initialization:	
  1263                           ;End of C runtime variable initialization code
  1264                           
  1265  0037                     __end_of__initialization:
  1266  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1267  0038  0020               	movlb	0
  1268  0039  3180  283B         	ljmp	_main	;jump to C main() function
  1269                           
  1270                           	psect	bssCOMMON
  1271  0070                     __pbssCOMMON:
  1272  0070                     _holadcr:
  1273  0070                     	ds	1
  1274  0071                     _Led1toggle:
  1275  0071                     	ds	1
  1276  0072                     _cmd:
  1277  0072                     	ds	1
  1278  0073                     _i2cSlaveState:
  1279  0073                     	ds	1
  1280  0074                     _i2cRdData:
  1281  0074                     	ds	1
  1282  0075                     _i2cWrData:
  1283  0075                     	ds	1
  1284                           
  1285                           	psect	bssBANK0
  1286  0020                     __pbssBANK0:
  1287  0020                     _ADC_InterruptHandler:
  1288  0020                     	ds	2
  1289  0022                     _I2C_SlaveWrColInterruptHandler:
  1290  0022                     	ds	2
  1291  0024                     _I2C_SlaveBusColInterruptHandler:
  1292  0024                     	ds	2
  1293  0026                     _I2C_SlaveAddrInterruptHandler:
  1294  0026                     	ds	2
  1295  0028                     _I2C_SlaveWrInterruptHandler:
  1296  0028                     	ds	2
  1297  002A                     _I2C_SlaveRdInterruptHandler:
  1298  002A                     	ds	2
  1299  002C                     _MSSP_InterruptHandler:
  1300  002C                     	ds	2
  1301  002E                     _lres:
  1302  002E                     	ds	1
  1303  002F                     _hres:
  1304  002F                     	ds	1
  1305  0030                     _i2cSlaveAddr:
  1306  0030                     	ds	1
  1307                           
  1308                           	psect	clrtext
  1309  0280                     clear_ram0:	
  1310                           ;	Called with FSR0 containing the base address, and
  1311                           ;	WREG with the size to clear
  1312                           
  1313  0280  0064               	clrwdt	;clear the watchdog before getting into this loop
  1314  0281                     clrloop0:
  1315  0281  0180               	clrf	0	;clear RAM location pointed to by FSR
  1316  0282  3101               	addfsr 0,1
  1317  0283  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1318  0284  2A81               	goto	clrloop0	;have we reached the end yet?
  1319  0285  3400               	retlw	0	;all done for this memory range, return
  1320                           
  1321                           	psect	cstackCOMMON
  1322  0076                     __pcstackCOMMON:
  1323  0076                     ?_I2C_Initialize:
  1324  0076                     ?_OSCILLATOR_Initialize:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0076                     ?_WDT_Initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0076                     ?_ADC_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0076                     ?_I2C_SlaveOpen:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0076                     ?_I2C_SlaveSetSlaveAddr:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0076                     ?_I2C_SlaveSetSlaveMask:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0076                     ?_I2C_Isr:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0076                     ?_I2C_SlaveDefWrInterruptHandler:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0076                     ?_I2C_SlaveDefRdInterruptHandler:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0076                     ??_I2C_SlaveDefRdInterruptHandler:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0076                     ?_I2C_SlaveDefAddrInterruptHandler:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0076                     ??_I2C_SlaveDefAddrInterruptHandler:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0076                     ?_I2C_SlaveEnableIrq:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0076                     ?_I2C_SlaveGetRxData:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0076                     ??_I2C_SlaveGetRxData:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0076                     ?_I2C_SlaveSendTxData:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0076                     ??_I2C_SlaveSendTxData:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0076                     ?_I2C_SlaveIsRead:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0076                     ??_I2C_SlaveIsRead:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0076                     ?_I2C_SlaveClearIrq:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0076                     ??_I2C_SlaveClearIrq:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0076                     ?_I2C_SlaveIsAddr:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0076                     ??_I2C_SlaveIsAddr:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0076                     ?_I2C_SlaveAddrCallBack:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0076                     ?_I2C_SlaveIsTxBufEmpty:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0076                     ??_I2C_SlaveIsTxBufEmpty:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0076                     ?_I2C_SlaveWrCallBack:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0076                     ?_I2C_SlaveIsRxBufFull:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0076                     ??_I2C_SlaveIsRxBufFull:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0076                     ?_I2C_SlaveRdCallBack:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0076                     ?_I2C_SlaveReleaseClock:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0076                     ??_I2C_SlaveReleaseClock:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0076                     ?_INTERRUPT_InterruptManager:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0076                     ?_PIN_MANAGER_Initialize:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0076                     ?_SYSTEM_Initialize:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0076                     ?_ADC_SelectChannel:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0076                     ?_ADC_StartConversion:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0076                     ?_ADC_IsConversionDone:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0076                     ?_I2C_Open:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0076                     ?_I2C_Read:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0076                     ??_I2C_Read:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0076                     ?_I2C_Write:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0076                     ?_CReI2C:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0076                     ?_CWrI2C:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0076                     ??_CWrI2C:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0076                     ?_main:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0076                     I2C_SlaveSendTxData@data:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465                           
  1466                           ; 1 bytes @ 0x0
  1467  0076                     	ds	1
  1468  0077                     ??_I2C_SlaveDefWrInterruptHandler:
  1469  0077                     ??_I2C_SlaveAddrCallBack:	
  1470                           ; 1 bytes @ 0x1
  1471                           
  1472  0077                     ??_I2C_SlaveRdCallBack:	
  1473                           ; 1 bytes @ 0x1
  1474                           
  1475  0077                     ??_I2C_Write:	
  1476                           ; 1 bytes @ 0x1
  1477                           
  1478  0077                     I2C_Write@data:	
  1479                           ; 1 bytes @ 0x1
  1480                           
  1481                           
  1482                           ; 1 bytes @ 0x1
  1483  0077                     	ds	1
  1484  0078                     ??_I2C_Isr:
  1485  0078                     ??_I2C_SlaveWrCallBack:	
  1486                           ; 1 bytes @ 0x2
  1487                           
  1488  0078                     ??_CReI2C:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x2
  1493  0078                     	ds	2
  1494  007A                     ??_OSCILLATOR_Initialize:
  1495  007A                     ??_WDT_Initialize:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498  007A                     ??_ADC_Initialize:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  007A                     ??_I2C_SlaveSetSlaveAddr:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  007A                     ??_I2C_SlaveSetSlaveMask:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  007A                     ??_I2C_SlaveSetIsrHandler:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  007A                     ??_I2C_SlaveSetBusColIntHandler:	
  1511                           ; 1 bytes @ 0x4
  1512                           
  1513  007A                     ??_I2C_SlaveSetWriteIntHandler:	
  1514                           ; 1 bytes @ 0x4
  1515                           
  1516  007A                     ??_I2C_SlaveSetReadIntHandler:	
  1517                           ; 1 bytes @ 0x4
  1518                           
  1519  007A                     ??_I2C_SlaveSetAddrIntHandler:	
  1520                           ; 1 bytes @ 0x4
  1521                           
  1522  007A                     ??_I2C_SlaveSetWrColIntHandler:	
  1523                           ; 1 bytes @ 0x4
  1524                           
  1525  007A                     ??_I2C_SlaveEnableIrq:	
  1526                           ; 1 bytes @ 0x4
  1527                           
  1528  007A                     ??_INTERRUPT_InterruptManager:	
  1529                           ; 1 bytes @ 0x4
  1530                           
  1531  007A                     ??_PIN_MANAGER_Initialize:	
  1532                           ; 1 bytes @ 0x4
  1533                           
  1534  007A                     ??_SYSTEM_Initialize:	
  1535                           ; 1 bytes @ 0x4
  1536                           
  1537  007A                     ??_ADC_StartConversion:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540  007A                     ??_ADC_IsConversionDone:	
  1541                           ; 1 bytes @ 0x4
  1542                           
  1543  007A                     ??_I2C_Open:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546                           
  1547                           	psect	cstackBANK0
  1548  0031                     __pcstackBANK0:	
  1549                           ; 1 bytes @ 0x4
  1550                           
  1551  0031                     ??_I2C_Initialize:
  1552  0031                     ??_I2C_SlaveOpen:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0031                     ?_I2C_SlaveSetIsrHandler:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0031                     ?_I2C_SlaveSetBusColIntHandler:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0031                     ?_I2C_SlaveSetWriteIntHandler:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0031                     ?_I2C_SlaveSetReadIntHandler:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0031                     ?_I2C_SlaveSetAddrIntHandler:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0031                     ?_I2C_SlaveSetWrColIntHandler:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0031                     ??_ADC_SelectChannel:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0031                     I2C_SlaveSetSlaveAddr@slaveAddr:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0031                     I2C_SlaveSetSlaveMask@maskAddr:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0031                     I2C_SlaveSetIsrHandler@handler:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0031                     I2C_SlaveSetReadIntHandler@handler:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588  0031                     I2C_SlaveSetWriteIntHandler@handler:	
  1589                           ; 2 bytes @ 0x0
  1590                           
  1591  0031                     I2C_SlaveSetAddrIntHandler@handler:	
  1592                           ; 2 bytes @ 0x0
  1593                           
  1594  0031                     I2C_SlaveSetWrColIntHandler@handler:	
  1595                           ; 2 bytes @ 0x0
  1596                           
  1597  0031                     I2C_SlaveSetBusColIntHandler@handler:	
  1598                           ; 2 bytes @ 0x0
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0x0
  1602  0031                     	ds	1
  1603  0032                     ADC_SelectChannel@channel:
  1604                           
  1605                           ; 1 bytes @ 0x1
  1606  0032                     	ds	1
  1607  0033                     ??_main:
  1608                           
  1609                           ; 1 bytes @ 0x2
  1610  0033                     	ds	2
  1611                           
  1612                           	psect	maintext
  1613  003B                     __pmaintext:	
  1614 ;;
  1615 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1616 ;;
  1617 ;; *************** function _main *****************
  1618 ;; Defined at:
  1619 ;;		line 90 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : B1F/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1633 ;;      Params:         0       0       0       0
  1634 ;;      Locals:         0       0       0       0
  1635 ;;      Temps:          0       2       0       0
  1636 ;;      Totals:         0       2       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels required when called: 8
  1639 ;; This function calls:
  1640 ;;		_ADC_IsConversionDone
  1641 ;;		_ADC_SelectChannel
  1642 ;;		_ADC_StartConversion
  1643 ;;		_I2C_Open
  1644 ;;		_I2C_SlaveSetReadIntHandler
  1645 ;;		_I2C_SlaveSetWriteIntHandler
  1646 ;;		_SYSTEM_Initialize
  1647 ;; This function is called by:
  1648 ;;		Startup code after reset
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _main
  1654  003B                     _main:
  1655  003B                     l1780:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1658                           
  1659                           
  1660                           ;main.c: 94:     SYSTEM_Initialize();
  1661  003B  3181  21E6  3180   	fcall	_SYSTEM_Initialize
  1662  003E                     l1782:
  1663  003E  0022               	movlb	2	; select bank2
  1664  003F  160C               	bsf	12,4	;volatile
  1665  0040                     l1784:
  1666                           
  1667                           ;main.c: 96:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1668  0040  3015               	movlw	21
  1669  0041  0020               	movlb	0	; select bank0
  1670  0042  00B4               	movwf	??_main+1
  1671  0043  304B               	movlw	75
  1672  0044  00B3               	movwf	??_main
  1673  0045  30BE               	movlw	190
  1674  0046                     u727:
  1675  0046  0B89               	decfsz	9,f
  1676  0047  2846               	goto	u727
  1677  0048  0BB3               	decfsz	??_main,f
  1678  0049  2846               	goto	u727
  1679  004A  0BB4               	decfsz	??_main+1,f
  1680  004B  2846               	goto	u727
  1681  004C  0000               	nop
  1682  004D                     l1786:
  1683                           
  1684                           ;main.c: 102:     (INTCONbits.GIE = 1);
  1685  004D  178B               	bsf	11,7	;volatile
  1686  004E                     l1788:
  1687                           
  1688                           ;main.c: 105:     (INTCONbits.PEIE = 1);
  1689  004E  170B               	bsf	11,6	;volatile
  1690  004F                     l1790:
  1691                           
  1692                           ;main.c: 112:     ADC_SelectChannel(AN2);
  1693  004F  3002               	movlw	2
  1694  0050  3182  2206  3180   	fcall	_ADC_SelectChannel
  1695  0053                     l1792:
  1696                           
  1697                           ;main.c: 113:     I2C_Open();
  1698  0053  3181  2176  3180   	fcall	_I2C_Open
  1699  0056                     l1794:
  1700                           
  1701                           ;main.c: 116:     I2C_SlaveSetReadIntHandler(CWrI2C);
  1702  0056  3049               	movlw	low _CWrI2C
  1703  0057  0020               	movlb	0	; select bank0
  1704  0058  00B1               	movwf	I2C_SlaveSetReadIntHandler@handler
  1705  0059  3002               	movlw	high _CWrI2C
  1706  005A  00B2               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  1707  005B  3182  22A4  3180   	fcall	_I2C_SlaveSetReadIntHandler
  1708  005E                     l1796:
  1709                           
  1710                           ;main.c: 117:     I2C_SlaveSetWriteIntHandler(CReI2C);
  1711  005E  30CF               	movlw	low _CReI2C
  1712  005F  0020               	movlb	0	; select bank0
  1713  0060  00B1               	movwf	I2C_SlaveSetWriteIntHandler@handler
  1714  0061  3001               	movlw	high _CReI2C
  1715  0062  00B2               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  1716  0063  3182  228C  3180   	fcall	_I2C_SlaveSetWriteIntHandler
  1717  0066                     l479:	
  1718                           ;main.c: 121:     while (1)
  1719                           
  1720                           
  1721                           ;main.c: 122:     {;main.c: 125:         ADC_StartConversion();
  1722  0066  3182  22E0  3180   	fcall	_ADC_StartConversion
  1723  0069                     l1798:	
  1724                           ;main.c: 126:         while(ADC_IsConversionDone() == 0);
  1725                           
  1726  0069  3182  2264  3180   	fcall	_ADC_IsConversionDone
  1727  006C  3A00               	xorlw	0
  1728  006D  1903               	skipnz
  1729  006E  2870               	goto	u611
  1730  006F  2871               	goto	u610
  1731  0070                     u611:
  1732  0070  2869               	goto	l1798
  1733  0071                     u610:
  1734  0071                     l1800:
  1735                           
  1736                           ;main.c: 127:         hres = ADRESH;
  1737  0071  0021               	movlb	1	; select bank1
  1738  0072  081C               	movf	28,w	;volatile
  1739  0073  0020               	movlb	0	; select bank0
  1740  0074  00B3               	movwf	??_main
  1741  0075  0833               	movf	??_main,w
  1742  0076  00AF               	movwf	_hres
  1743                           
  1744                           ;main.c: 128:         lres = ADRESL;
  1745  0077  0021               	movlb	1	; select bank1
  1746  0078  081B               	movf	27,w	;volatile
  1747  0079  0020               	movlb	0	; select bank0
  1748  007A  00B3               	movwf	??_main
  1749  007B  0833               	movf	??_main,w
  1750  007C  00AE               	movwf	_lres
  1751  007D                     l1802:
  1752                           
  1753                           ;main.c: 135:         if(cmd != 0){
  1754  007D  0872               	movf	_cmd,w
  1755  007E  1903               	btfsc	3,2
  1756  007F  2881               	goto	u621
  1757  0080  2882               	goto	u620
  1758  0081                     u621:
  1759  0081  28D8               	goto	l1816
  1760  0082                     u620:
  1761  0082                     l1804:
  1762  0082  1003               	clrc
  1763  0083  0022               	movlb	2	; select bank2
  1764  0084  1E0C               	btfss	12,4	;volatile
  1765  0085  1403               	setc
  1766  0086  1803               	btfsc	3,0
  1767  0087  2889               	goto	u631
  1768  0088  288C               	goto	u630
  1769  0089                     u631:
  1770  0089  0022               	movlb	2	; select bank2
  1771  008A  160C               	bsf	12,4	;volatile
  1772  008B  288E               	goto	u644
  1773  008C                     u630:
  1774  008C  0022               	movlb	2	; select bank2
  1775  008D  120C               	bcf	12,4	;volatile
  1776  008E                     u644:
  1777  008E                     l1806:
  1778                           
  1779                           ;main.c: 137:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  1780  008E  3015               	movlw	21
  1781  008F  0020               	movlb	0	; select bank0
  1782  0090  00B4               	movwf	??_main+1
  1783  0091  304B               	movlw	75
  1784  0092  00B3               	movwf	??_main
  1785  0093  30BE               	movlw	190
  1786  0094                     u737:
  1787  0094  0B89               	decfsz	9,f
  1788  0095  2894               	goto	u737
  1789  0096  0BB3               	decfsz	??_main,f
  1790  0097  2894               	goto	u737
  1791  0098  0BB4               	decfsz	??_main+1,f
  1792  0099  2894               	goto	u737
  1793  009A  0000               	nop
  1794  009B                     l1808:
  1795  009B  1003               	clrc
  1796  009C  0022               	movlb	2	; select bank2
  1797  009D  1E0C               	btfss	12,4	;volatile
  1798  009E  1403               	setc
  1799  009F  1803               	btfsc	3,0
  1800  00A0  28A2               	goto	u651
  1801  00A1  28A5               	goto	u650
  1802  00A2                     u651:
  1803  00A2  0022               	movlb	2	; select bank2
  1804  00A3  160C               	bsf	12,4	;volatile
  1805  00A4  28A7               	goto	u664
  1806  00A5                     u650:
  1807  00A5  0022               	movlb	2	; select bank2
  1808  00A6  120C               	bcf	12,4	;volatile
  1809  00A7                     u664:
  1810  00A7  28BA               	goto	l1812
  1811  00A8                     l490:	
  1812                           ;main.c: 141:                     do { LATCbits.LATC2 = 1; } while(0);
  1813                           
  1814  00A8  0022               	movlb	2	; select bank2
  1815  00A9  150E               	bsf	14,2	;volatile
  1816  00AA  28D7               	goto	l1814
  1817  00AB                     l494:	
  1818                           ;main.c: 144:                     do { LATCbits.LATC2 = 0; } while(0);
  1819                           
  1820  00AB  0022               	movlb	2	; select bank2
  1821  00AC  110E               	bcf	14,2	;volatile
  1822  00AD  28D7               	goto	l1814
  1823  00AE                     l497:	
  1824                           ;main.c: 147:                     do { LATCbits.LATC0 = 1; } while(0);
  1825                           
  1826  00AE  0022               	movlb	2	; select bank2
  1827  00AF  140E               	bsf	14,0	;volatile
  1828  00B0  28D7               	goto	l1814
  1829  00B1                     l500:	
  1830                           ;main.c: 150:                     do { LATCbits.LATC0 = 0; } while(0);
  1831                           
  1832  00B1  0022               	movlb	2	; select bank2
  1833  00B2  100E               	bcf	14,0	;volatile
  1834  00B3  28D7               	goto	l1814
  1835  00B4                     l503:	
  1836                           ;main.c: 153:                     do { LATCbits.LATC1 = 1; } while(0);
  1837                           
  1838  00B4  0022               	movlb	2	; select bank2
  1839  00B5  148E               	bsf	14,1	;volatile
  1840  00B6  28D7               	goto	l1814
  1841  00B7                     l506:	
  1842                           ;main.c: 156:                     do { LATCbits.LATC1 = 0; } while(0);
  1843                           
  1844  00B7  0022               	movlb	2	; select bank2
  1845  00B8  108E               	bcf	14,1	;volatile
  1846  00B9  28D7               	goto	l1814
  1847  00BA                     l1812:
  1848  00BA  0872               	movf	_cmd,w
  1849  00BB  0020               	movlb	0	; select bank0
  1850  00BC  00B3               	movwf	??_main
  1851  00BD  01B4               	clrf	??_main+1
  1852                           
  1853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1854                           ; Switch size 1, requested type "simple"
  1855                           ; Number of cases is 1, Range of values is 0 to 0
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte            4     3 (average)
  1859                           ; direct_byte            8     6 (fixed)
  1860                           ; jumptable            260     6 (fixed)
  1861                           ;	Chosen strategy is simple_byte
  1862  00BE  0834               	movf	??_main+1,w
  1863  00BF  3A00               	xorlw	0	; case 0
  1864  00C0  1903               	skipnz
  1865  00C1  28C3               	goto	l1878
  1866  00C2  28D7               	goto	l1814
  1867  00C3                     l1878:
  1868                           
  1869                           ; Switch size 1, requested type "simple"
  1870                           ; Number of cases is 6, Range of values is 1 to 6
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte           19    10 (average)
  1874                           ; direct_byte           21     9 (fixed)
  1875                           ; jumptable            263     9 (fixed)
  1876                           ;	Chosen strategy is simple_byte
  1877  00C3  0833               	movf	??_main,w
  1878  00C4  3A01               	xorlw	1	; case 1
  1879  00C5  1903               	skipnz
  1880  00C6  28A8               	goto	l490
  1881  00C7  3A03               	xorlw	3	; case 2
  1882  00C8  1903               	skipnz
  1883  00C9  28AB               	goto	l494
  1884  00CA  3A01               	xorlw	1	; case 3
  1885  00CB  1903               	skipnz
  1886  00CC  28AE               	goto	l497
  1887  00CD  3A07               	xorlw	7	; case 4
  1888  00CE  1903               	skipnz
  1889  00CF  28B1               	goto	l500
  1890  00D0  3A01               	xorlw	1	; case 5
  1891  00D1  1903               	skipnz
  1892  00D2  28B4               	goto	l503
  1893  00D3  3A03               	xorlw	3	; case 6
  1894  00D4  1903               	skipnz
  1895  00D5  28B7               	goto	l506
  1896  00D6  28D7               	goto	l1814
  1897  00D7                     l1814:
  1898                           
  1899                           ;main.c: 163:             cmd = 0;
  1900  00D7  01F2               	clrf	_cmd
  1901  00D8                     l1816:
  1902  00D8  1003               	clrc
  1903  00D9  0022               	movlb	2	; select bank2
  1904  00DA  1E8C               	btfss	12,5	;volatile
  1905  00DB  1403               	setc
  1906  00DC  1803               	btfsc	3,0
  1907  00DD  28DF               	goto	u671
  1908  00DE  28E2               	goto	u670
  1909  00DF                     u671:
  1910  00DF  0022               	movlb	2	; select bank2
  1911  00E0  168C               	bsf	12,5	;volatile
  1912  00E1  28E4               	goto	u684
  1913  00E2                     u670:
  1914  00E2  0022               	movlb	2	; select bank2
  1915  00E3  128C               	bcf	12,5	;volatile
  1916  00E4                     u684:
  1917  00E4                     l1818:
  1918                           
  1919                           ;main.c: 167:         if(Led1toggle){
  1920  00E4  0871               	movf	_Led1toggle,w
  1921  00E5  1903               	btfsc	3,2
  1922  00E6  28E8               	goto	u691
  1923  00E7  28E9               	goto	u690
  1924  00E8                     u691:
  1925  00E8  28F4               	goto	l1822
  1926  00E9                     u690:
  1927  00E9                     l1820:
  1928  00E9  1003               	clrc
  1929  00EA  1E0C               	btfss	12,4	;volatile
  1930  00EB  1403               	setc
  1931  00EC  1803               	btfsc	3,0
  1932  00ED  28EF               	goto	u701
  1933  00EE  28F2               	goto	u700
  1934  00EF                     u701:
  1935  00EF  0022               	movlb	2	; select bank2
  1936  00F0  160C               	bsf	12,4	;volatile
  1937  00F1  28F4               	goto	u714
  1938  00F2                     u700:
  1939  00F2  0022               	movlb	2	; select bank2
  1940  00F3  120C               	bcf	12,4	;volatile
  1941  00F4                     u714:
  1942  00F4                     l1822:
  1943                           
  1944                           ;main.c: 171:             _delay((unsigned long)((100)*(16000000/4000.0)));
  1945  00F4  3003               	movlw	3
  1946  00F5  0020               	movlb	0	; select bank0
  1947  00F6  00B4               	movwf	??_main+1
  1948  00F7  3008               	movlw	8
  1949  00F8  00B3               	movwf	??_main
  1950  00F9  3077               	movlw	119
  1951  00FA                     u747:
  1952  00FA  0B89               	decfsz	9,f
  1953  00FB  28FA               	goto	u747
  1954  00FC  0BB3               	decfsz	??_main,f
  1955  00FD  28FA               	goto	u747
  1956  00FE  0BB4               	decfsz	??_main+1,f
  1957  00FF  28FA               	goto	u747
  1958  0100  2866               	goto	l479
  1959  0101  3180  2827         	ljmp	start
  1960  0103                     __end_of_main:
  1961                           
  1962                           	psect	text1
  1963  01E6                     __ptext1:	
  1964 ;; *************** function _SYSTEM_Initialize *****************
  1965 ;; Defined at:
  1966 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1980 ;;      Params:         0       0       0       0
  1981 ;;      Locals:         0       0       0       0
  1982 ;;      Temps:          0       0       0       0
  1983 ;;      Totals:         0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 7
  1987 ;; This function calls:
  1988 ;;		_ADC_Initialize
  1989 ;;		_I2C_Initialize
  1990 ;;		_OSCILLATOR_Initialize
  1991 ;;		_PIN_MANAGER_Initialize
  1992 ;;		_WDT_Initialize
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _SYSTEM_Initialize
  2000  01E6                     _SYSTEM_Initialize:
  2001  01E6                     l1768:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2004                           
  2005                           
  2006                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2007  01E6  3182  223D  3181   	fcall	_I2C_Initialize
  2008                           
  2009                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2010  01E9  3181  21B5  3181   	fcall	_PIN_MANAGER_Initialize
  2011                           
  2012                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2013  01EC  3182  2286  3181   	fcall	_OSCILLATOR_Initialize
  2014                           
  2015                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2016  01EF  3182  22D1  3181   	fcall	_WDT_Initialize
  2017                           
  2018                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2019  01F2  3182  2254  3181   	fcall	_ADC_Initialize
  2020  01F5                     l96:
  2021  01F5  0008               	return
  2022  01F6                     __end_of_SYSTEM_Initialize:
  2023                           
  2024                           	psect	text2
  2025  02D1                     __ptext2:	
  2026 ;; *************** function _WDT_Initialize *****************
  2027 ;; Defined at:
  2028 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2042 ;;      Params:         0       0       0       0
  2043 ;;      Locals:         0       0       0       0
  2044 ;;      Temps:          0       0       0       0
  2045 ;;      Totals:         0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 6
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _WDT_Initialize
  2058  02D1                     _WDT_Initialize:
  2059  02D1                     l1480:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _WDT_Initialize: [wreg]
  2062                           
  2063                           
  2064                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  2065  02D1  3016               	movlw	22
  2066  02D2  0021               	movlb	1	; select bank1
  2067  02D3  0097               	movwf	23	;volatile
  2068  02D4                     l102:
  2069  02D4  0008               	return
  2070  02D5                     __end_of_WDT_Initialize:
  2071                           
  2072                           	psect	text3
  2073  01B5                     __ptext3:	
  2074 ;; *************** function _PIN_MANAGER_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2090 ;;      Params:         0       0       0       0
  2091 ;;      Locals:         0       0       0       0
  2092 ;;      Temps:          0       0       0       0
  2093 ;;      Totals:         0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 6
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _PIN_MANAGER_Initialize
  2106  01B5                     _PIN_MANAGER_Initialize:
  2107  01B5                     l1452:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2110                           
  2111                           
  2112                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2113  01B5  0022               	movlb	2	; select bank2
  2114  01B6  018C               	clrf	12	;volatile
  2115                           
  2116                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2117  01B7  018D               	clrf	13	;volatile
  2118                           
  2119                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2120  01B8  018E               	clrf	14	;volatile
  2121  01B9                     l1454:
  2122                           
  2123                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0F;
  2124  01B9  300F               	movlw	15
  2125  01BA  0021               	movlb	1	; select bank1
  2126  01BB  008C               	movwf	12	;volatile
  2127  01BC                     l1456:
  2128                           
  2129                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  2130  01BC  30F0               	movlw	240
  2131  01BD  008D               	movwf	13	;volatile
  2132  01BE                     l1458:
  2133                           
  2134                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x30;
  2135  01BE  3030               	movlw	48
  2136  01BF  008E               	movwf	14	;volatile
  2137  01C0                     l1460:
  2138                           
  2139                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  2140  01C0  30CF               	movlw	207
  2141  01C1  0023               	movlb	3	; select bank3
  2142  01C2  008E               	movwf	14	;volatile
  2143  01C3                     l1462:
  2144                           
  2145                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x20;
  2146  01C3  3020               	movlw	32
  2147  01C4  008D               	movwf	13	;volatile
  2148  01C5                     l1464:
  2149                           
  2150                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  2151  01C5  3017               	movlw	23
  2152  01C6  008C               	movwf	12	;volatile
  2153                           
  2154                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2155  01C7  0024               	movlb	4	; select bank4
  2156  01C8  018D               	clrf	13	;volatile
  2157                           
  2158                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2159  01C9  018C               	clrf	12	;volatile
  2160  01CA                     l1466:
  2161                           
  2162                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  2163  01CA  0021               	movlb	1	; select bank1
  2164  01CB  1795               	bsf	21,7	;volatile
  2165                           
  2166                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  2167  01CC  0022               	movlb	2	; select bank2
  2168  01CD  019D               	clrf	29	;volatile
  2169  01CE                     l62:
  2170  01CE  0008               	return
  2171  01CF                     __end_of_PIN_MANAGER_Initialize:
  2172                           
  2173                           	psect	text4
  2174  0286                     __ptext4:	
  2175 ;; *************** function _OSCILLATOR_Initialize *****************
  2176 ;; Defined at:
  2177 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2191 ;;      Params:         0       0       0       0
  2192 ;;      Locals:         0       0       0       0
  2193 ;;      Temps:          0       0       0       0
  2194 ;;      Totals:         0       0       0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 6
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_SYSTEM_Initialize
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _OSCILLATOR_Initialize
  2207  0286                     _OSCILLATOR_Initialize:
  2208  0286                     l1476:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2211                           
  2212                           
  2213                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x78;
  2214  0286  3078               	movlw	120
  2215  0287  0021               	movlb	1	; select bank1
  2216  0288  0099               	movwf	25	;volatile
  2217  0289                     l1478:
  2218                           
  2219                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  2220  0289  0022               	movlb	2	; select bank2
  2221  028A  0196               	clrf	22	;volatile
  2222  028B                     l99:
  2223  028B  0008               	return
  2224  028C                     __end_of_OSCILLATOR_Initialize:
  2225                           
  2226                           	psect	text5
  2227  023D                     __ptext5:	
  2228 ;; *************** function _I2C_Initialize *****************
  2229 ;; Defined at:
  2230 ;;		line 109 in file "mcc_generated_files/i2c_slave.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2244 ;;      Params:         0       0       0       0
  2245 ;;      Locals:         0       0       0       0
  2246 ;;      Temps:          0       1       0       0
  2247 ;;      Totals:         0       1       0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 6
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_SYSTEM_Initialize
  2255 ;;		_I2C_Enable
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _I2C_Initialize
  2261  023D                     _I2C_Initialize:
  2262  023D                     l1732:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  2265                           
  2266                           
  2267                           ;mcc_generated_files/i2c_slave.c: 111:     SSP1STAT = 0x40;
  2268  023D  3040               	movlw	64
  2269  023E  0024               	movlb	4	; select bank4
  2270  023F  0094               	movwf	20	;volatile
  2271  0240                     l1734:
  2272                           
  2273                           ;mcc_generated_files/i2c_slave.c: 112:     SSP1CON1 |= 0x06;
  2274  0240  3006               	movlw	6
  2275  0241  0020               	movlb	0	; select bank0
  2276  0242  00B1               	movwf	??_I2C_Initialize
  2277  0243  0831               	movf	??_I2C_Initialize,w
  2278  0244  0024               	movlb	4	; select bank4
  2279  0245  0495               	iorwf	21,f	;volatile
  2280  0246                     l1736:
  2281                           
  2282                           ;mcc_generated_files/i2c_slave.c: 113:     SSP1CON2 = 0x00;
  2283  0246  0196               	clrf	22	;volatile
  2284  0247                     l1738:
  2285                           
  2286                           ;mcc_generated_files/i2c_slave.c: 114:     SSP1CON1bits.SSPEN = 0;
  2287  0247  1295               	bcf	21,5	;volatile
  2288  0248                     l249:
  2289  0248  0008               	return
  2290  0249                     __end_of_I2C_Initialize:
  2291                           
  2292                           	psect	text6
  2293  0254                     __ptext6:	
  2294 ;; *************** function _ADC_Initialize *****************
  2295 ;; Defined at:
  2296 ;;		line 67 in file "mcc_generated_files/adc.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2310 ;;      Params:         0       0       0       0
  2311 ;;      Locals:         0       0       0       0
  2312 ;;      Temps:          0       0       0       0
  2313 ;;      Totals:         0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 6
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_SYSTEM_Initialize
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _ADC_Initialize
  2326  0254                     _ADC_Initialize:
  2327  0254                     l1482:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2330                           
  2331                           
  2332                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x00;
  2333  0254  0021               	movlb	1	; select bank1
  2334  0255  019E               	clrf	30	;volatile
  2335                           
  2336                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  2337  0256  019F               	clrf	31	;volatile
  2338                           
  2339                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  2340  0257  019B               	clrf	27	;volatile
  2341                           
  2342                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  2343  0258  019C               	clrf	28	;volatile
  2344  0259                     l1484:
  2345                           
  2346                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  2347  0259  3001               	movlw	1
  2348  025A  009D               	movwf	29	;volatile
  2349  025B                     l121:
  2350  025B  0008               	return
  2351  025C                     __end_of_ADC_Initialize:
  2352                           
  2353                           	psect	text7
  2354  0176                     __ptext7:	
  2355 ;; *************** function _I2C_Open *****************
  2356 ;; Defined at:
  2357 ;;		line 118 in file "mcc_generated_files/i2c_slave.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2371 ;;      Params:         0       0       0       0
  2372 ;;      Locals:         0       0       0       0
  2373 ;;      Temps:          0       0       0       0
  2374 ;;      Totals:         0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 7
  2378 ;; This function calls:
  2379 ;;		_I2C_SlaveEnableIrq
  2380 ;;		_I2C_SlaveOpen
  2381 ;;		_I2C_SlaveSetAddrIntHandler
  2382 ;;		_I2C_SlaveSetBusColIntHandler
  2383 ;;		_I2C_SlaveSetIsrHandler
  2384 ;;		_I2C_SlaveSetReadIntHandler
  2385 ;;		_I2C_SlaveSetSlaveAddr
  2386 ;;		_I2C_SlaveSetSlaveMask
  2387 ;;		_I2C_SlaveSetWrColIntHandler
  2388 ;;		_I2C_SlaveSetWriteIntHandler
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _I2C_Open
  2396  0176                     _I2C_Open:
  2397  0176                     l1774:	
  2398                           ;incstack = 0
  2399                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2400                           
  2401                           
  2402                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveOpen();
  2403  0176  3181  21F6  3181   	fcall	_I2C_SlaveOpen
  2404                           
  2405                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetSlaveAddr(8);
  2406  0179  3008               	movlw	8
  2407  017A  3182  229E  3181   	fcall	_I2C_SlaveSetSlaveAddr
  2408                           
  2409                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetSlaveMask(127);
  2410  017D  307F               	movlw	127
  2411  017E  3182  2298  3181   	fcall	_I2C_SlaveSetSlaveMask
  2412                           
  2413                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveSetIsrHandler(I2C_Isr);
  2414  0181  3003               	movlw	low _I2C_Isr
  2415  0182  0020               	movlb	0	; select bank0
  2416  0183  00B1               	movwf	I2C_SlaveSetIsrHandler@handler
  2417  0184  3001               	movlw	high _I2C_Isr
  2418  0185  00B2               	movwf	I2C_SlaveSetIsrHandler@handler+1
  2419  0186  3182  22AA  3181   	fcall	_I2C_SlaveSetIsrHandler
  2420                           
  2421                           ;mcc_generated_files/i2c_slave.c: 124:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  2422  0189  3000               	movlw	0
  2423  018A  0020               	movlb	0	; select bank0
  2424  018B  00B1               	movwf	I2C_SlaveSetBusColIntHandler@handler
  2425  018C  3000               	movlw	0
  2426  018D  00B2               	movwf	I2C_SlaveSetBusColIntHandler@handler+1
  2427  018E  3182  22B0  3181   	fcall	_I2C_SlaveSetBusColIntHandler
  2428                           
  2429                           ;mcc_generated_files/i2c_slave.c: 125:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  2430  0191  30C2               	movlw	low _I2C_SlaveDefWrInterruptHandler
  2431  0192  0020               	movlb	0	; select bank0
  2432  0193  00B1               	movwf	I2C_SlaveSetWriteIntHandler@handler
  2433  0194  3002               	movlw	high _I2C_SlaveDefWrInterruptHandler
  2434  0195  00B2               	movwf	I2C_SlaveSetWriteIntHandler@handler+1
  2435  0196  3182  228C  3181   	fcall	_I2C_SlaveSetWriteIntHandler
  2436                           
  2437                           ;mcc_generated_files/i2c_slave.c: 126:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  2438  0199  306B               	movlw	low _I2C_SlaveDefRdInterruptHandler
  2439  019A  0020               	movlb	0	; select bank0
  2440  019B  00B1               	movwf	I2C_SlaveSetReadIntHandler@handler
  2441  019C  3002               	movlw	high _I2C_SlaveDefRdInterruptHandler
  2442  019D  00B2               	movwf	I2C_SlaveSetReadIntHandler@handler+1
  2443  019E  3182  22A4  3181   	fcall	_I2C_SlaveSetReadIntHandler
  2444                           
  2445                           ;mcc_generated_files/i2c_slave.c: 127:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  2446  01A1  305C               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  2447  01A2  0020               	movlb	0	; select bank0
  2448  01A3  00B1               	movwf	I2C_SlaveSetAddrIntHandler@handler
  2449  01A4  3002               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  2450  01A5  00B2               	movwf	I2C_SlaveSetAddrIntHandler@handler+1
  2451  01A6  3182  22B6  3181   	fcall	_I2C_SlaveSetAddrIntHandler
  2452                           
  2453                           ;mcc_generated_files/i2c_slave.c: 128:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  2454  01A9  3000               	movlw	0
  2455  01AA  0020               	movlb	0	; select bank0
  2456  01AB  00B1               	movwf	I2C_SlaveSetWrColIntHandler@handler
  2457  01AC  3000               	movlw	0
  2458  01AD  00B2               	movwf	I2C_SlaveSetWrColIntHandler@handler+1
  2459  01AE  3182  2292  3181   	fcall	_I2C_SlaveSetWrColIntHandler
  2460  01B1                     l1776:
  2461                           
  2462                           ;mcc_generated_files/i2c_slave.c: 129:     I2C_SlaveEnableIrq();
  2463  01B1  3182  22DD  3181   	fcall	_I2C_SlaveEnableIrq
  2464  01B4                     l252:
  2465  01B4  0008               	return
  2466  01B5                     __end_of_I2C_Open:
  2467                           
  2468                           	psect	text8
  2469  028C                     __ptext8:	
  2470 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  2471 ;; Defined at:
  2472 ;;		line 253 in file "mcc_generated_files/i2c_slave.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2475 ;;		 -> CReI2C(1), I2C_SlaveDefWrInterruptHandler(1), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2487 ;;      Params:         0       2       0       0
  2488 ;;      Locals:         0       0       0       0
  2489 ;;      Temps:          0       0       0       0
  2490 ;;      Totals:         0       2       0       0
  2491 ;;Total ram usage:        2 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 6
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_I2C_Open
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _I2C_SlaveSetWriteIntHandler
  2504  028C                     _I2C_SlaveSetWriteIntHandler:
  2505  028C                     l1760:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _I2C_SlaveSetWriteIntHandler: [wreg]
  2508                           
  2509                           
  2510                           ;mcc_generated_files/i2c_slave.c: 254:     I2C_SlaveWrInterruptHandler = handler;
  2511  028C  0020               	movlb	0	; select bank0
  2512  028D  0832               	movf	I2C_SlaveSetWriteIntHandler@handler+1,w
  2513  028E  00A9               	movwf	_I2C_SlaveWrInterruptHandler+1
  2514  028F  0831               	movf	I2C_SlaveSetWriteIntHandler@handler,w
  2515  0290  00A8               	movwf	_I2C_SlaveWrInterruptHandler
  2516  0291                     l310:
  2517  0291  0008               	return
  2518  0292                     __end_of_I2C_SlaveSetWriteIntHandler:
  2519                           
  2520                           	psect	text9
  2521  0292                     __ptext9:	
  2522 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  2523 ;; Defined at:
  2524 ;;		line 286 in file "mcc_generated_files/i2c_slave.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2527 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2539 ;;      Params:         0       2       0       0
  2540 ;;      Locals:         0       0       0       0
  2541 ;;      Temps:          0       0       0       0
  2542 ;;      Totals:         0       2       0       0
  2543 ;;Total ram usage:        2 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 6
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_I2C_Open
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _I2C_SlaveSetWrColIntHandler
  2555  0292                     _I2C_SlaveSetWrColIntHandler:
  2556  0292                     l1766:	
  2557                           ;incstack = 0
  2558                           ; Regs used in _I2C_SlaveSetWrColIntHandler: [wreg]
  2559                           
  2560                           
  2561                           ;mcc_generated_files/i2c_slave.c: 287:     I2C_SlaveWrColInterruptHandler = handler;
  2562  0292  0020               	movlb	0	; select bank0
  2563  0293  0832               	movf	I2C_SlaveSetWrColIntHandler@handler+1,w
  2564  0294  00A3               	movwf	_I2C_SlaveWrColInterruptHandler+1
  2565  0295  0831               	movf	I2C_SlaveSetWrColIntHandler@handler,w
  2566  0296  00A2               	movwf	_I2C_SlaveWrColInterruptHandler
  2567  0297                     l330:
  2568  0297  0008               	return
  2569  0298                     __end_of_I2C_SlaveSetWrColIntHandler:
  2570                           
  2571                           	psect	text10
  2572  0298                     __ptext10:	
  2573 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  2574 ;; Defined at:
  2575 ;;		line 343 in file "mcc_generated_files/i2c_slave.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  maskAddr        1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  maskAddr        1    0[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2589 ;;      Params:         0       0       0       0
  2590 ;;      Locals:         0       1       0       0
  2591 ;;      Temps:          0       0       0       0
  2592 ;;      Totals:         0       1       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 6
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_I2C_Open
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _I2C_SlaveSetSlaveMask
  2605  0298                     _I2C_SlaveSetSlaveMask:
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _I2C_SlaveSetSlaveMask: [wreg+status,2+status,0]
  2609                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  2610  0298  0020               	movlb	0	; select bank0
  2611  0299  00B1               	movwf	I2C_SlaveSetSlaveMask@maskAddr
  2612  029A                     l1754:
  2613                           
  2614                           ;mcc_generated_files/i2c_slave.c: 343: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 344: {;mcc_generated_files/i
      +                          2c_slave.c: 345:     SSP1MSK = (uint8_t) (maskAddr << 1);
  2615  029A  3531               	lslf	I2C_SlaveSetSlaveMask@maskAddr,w
  2616  029B  0024               	movlb	4	; select bank4
  2617  029C  0093               	movwf	19	;volatile
  2618  029D                     l360:
  2619  029D  0008               	return
  2620  029E                     __end_of_I2C_SlaveSetSlaveMask:
  2621                           
  2622                           	psect	text11
  2623  029E                     __ptext11:	
  2624 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  2625 ;; Defined at:
  2626 ;;		line 338 in file "mcc_generated_files/i2c_slave.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  slaveAddr       1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  slaveAddr       1    0[BANK0 ] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2640 ;;      Params:         0       0       0       0
  2641 ;;      Locals:         0       1       0       0
  2642 ;;      Temps:          0       0       0       0
  2643 ;;      Totals:         0       1       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 6
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_I2C_Open
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _I2C_SlaveSetSlaveAddr
  2656  029E                     _I2C_SlaveSetSlaveAddr:
  2657                           
  2658                           ;incstack = 0
  2659                           ; Regs used in _I2C_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  2660                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  2661  029E  0020               	movlb	0	; select bank0
  2662  029F  00B1               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr
  2663  02A0                     l1752:
  2664                           
  2665                           ;mcc_generated_files/i2c_slave.c: 338: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 339: {;mcc_generated_files/
      +                          i2c_slave.c: 340:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  2666  02A0  3531               	lslf	I2C_SlaveSetSlaveAddr@slaveAddr,w
  2667  02A1  0024               	movlb	4	; select bank4
  2668  02A2  0092               	movwf	18	;volatile
  2669  02A3                     l357:
  2670  02A3  0008               	return
  2671  02A4                     __end_of_I2C_SlaveSetSlaveAddr:
  2672                           
  2673                           	psect	text12
  2674  02A4                     __ptext12:	
  2675 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  2676 ;; Defined at:
  2677 ;;		line 236 in file "mcc_generated_files/i2c_slave.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2680 ;;		 -> CWrI2C(1), I2C_SlaveDefRdInterruptHandler(1), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2692 ;;      Params:         0       2       0       0
  2693 ;;      Locals:         0       0       0       0
  2694 ;;      Temps:          0       0       0       0
  2695 ;;      Totals:         0       2       0       0
  2696 ;;Total ram usage:        2 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 6
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_I2C_Open
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _I2C_SlaveSetReadIntHandler
  2709  02A4                     _I2C_SlaveSetReadIntHandler:
  2710  02A4                     l1762:	
  2711                           ;incstack = 0
  2712                           ; Regs used in _I2C_SlaveSetReadIntHandler: [wreg]
  2713                           
  2714                           
  2715                           ;mcc_generated_files/i2c_slave.c: 237:     I2C_SlaveRdInterruptHandler = handler;
  2716  02A4  0020               	movlb	0	; select bank0
  2717  02A5  0832               	movf	I2C_SlaveSetReadIntHandler@handler+1,w
  2718  02A6  00AB               	movwf	_I2C_SlaveRdInterruptHandler+1
  2719  02A7  0831               	movf	I2C_SlaveSetReadIntHandler@handler,w
  2720  02A8  00AA               	movwf	_I2C_SlaveRdInterruptHandler
  2721  02A9                     l300:
  2722  02A9  0008               	return
  2723  02AA                     __end_of_I2C_SlaveSetReadIntHandler:
  2724                           
  2725                           	psect	text13
  2726  02AA                     __ptext13:	
  2727 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  2728 ;; Defined at:
  2729 ;;		line 230 in file "mcc_generated_files/i2c_slave.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2732 ;;		 -> I2C_Isr(1), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2744 ;;      Params:         0       2       0       0
  2745 ;;      Locals:         0       0       0       0
  2746 ;;      Temps:          0       0       0       0
  2747 ;;      Totals:         0       2       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 6
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_I2C_Open
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _I2C_SlaveSetIsrHandler
  2760  02AA                     _I2C_SlaveSetIsrHandler:
  2761  02AA                     l1756:	
  2762                           ;incstack = 0
  2763                           ; Regs used in _I2C_SlaveSetIsrHandler: [wreg]
  2764                           
  2765                           
  2766                           ;mcc_generated_files/i2c_slave.c: 230: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 231: {;mcc_generated_files/i2c_slave.c: 232:   
      +                            MSSP_InterruptHandler = handler;
  2767  02AA  0020               	movlb	0	; select bank0
  2768  02AB  0832               	movf	I2C_SlaveSetIsrHandler@handler+1,w
  2769  02AC  00AD               	movwf	_MSSP_InterruptHandler+1
  2770  02AD  0831               	movf	I2C_SlaveSetIsrHandler@handler,w
  2771  02AE  00AC               	movwf	_MSSP_InterruptHandler
  2772  02AF                     l297:
  2773  02AF  0008               	return
  2774  02B0                     __end_of_I2C_SlaveSetIsrHandler:
  2775                           
  2776                           	psect	text14
  2777  02B0                     __ptext14:	
  2778 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  2779 ;; Defined at:
  2780 ;;		line 302 in file "mcc_generated_files/i2c_slave.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2783 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2795 ;;      Params:         0       2       0       0
  2796 ;;      Locals:         0       0       0       0
  2797 ;;      Temps:          0       0       0       0
  2798 ;;      Totals:         0       2       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 6
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_I2C_Open
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _I2C_SlaveSetBusColIntHandler
  2811  02B0                     _I2C_SlaveSetBusColIntHandler:
  2812  02B0                     l1758:	
  2813                           ;incstack = 0
  2814                           ; Regs used in _I2C_SlaveSetBusColIntHandler: [wreg]
  2815                           
  2816                           
  2817                           ;mcc_generated_files/i2c_slave.c: 303:     I2C_SlaveBusColInterruptHandler = handler;
  2818  02B0  0020               	movlb	0	; select bank0
  2819  02B1  0832               	movf	I2C_SlaveSetBusColIntHandler@handler+1,w
  2820  02B2  00A5               	movwf	_I2C_SlaveBusColInterruptHandler+1
  2821  02B3  0831               	movf	I2C_SlaveSetBusColIntHandler@handler,w
  2822  02B4  00A4               	movwf	_I2C_SlaveBusColInterruptHandler
  2823  02B5                     l340:
  2824  02B5  0008               	return
  2825  02B6                     __end_of_I2C_SlaveSetBusColIntHandler:
  2826                           
  2827                           	psect	text15
  2828  02B6                     __ptext15:	
  2829 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  2830 ;; Defined at:
  2831 ;;		line 270 in file "mcc_generated_files/i2c_slave.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  2834 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2846 ;;      Params:         0       2       0       0
  2847 ;;      Locals:         0       0       0       0
  2848 ;;      Temps:          0       0       0       0
  2849 ;;      Totals:         0       2       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 6
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_I2C_Open
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _I2C_SlaveSetAddrIntHandler
  2862  02B6                     _I2C_SlaveSetAddrIntHandler:
  2863  02B6                     l1764:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _I2C_SlaveSetAddrIntHandler: [wreg]
  2866                           
  2867                           
  2868                           ;mcc_generated_files/i2c_slave.c: 271:     I2C_SlaveAddrInterruptHandler = handler;
  2869  02B6  0020               	movlb	0	; select bank0
  2870  02B7  0832               	movf	I2C_SlaveSetAddrIntHandler@handler+1,w
  2871  02B8  00A7               	movwf	_I2C_SlaveAddrInterruptHandler+1
  2872  02B9  0831               	movf	I2C_SlaveSetAddrIntHandler@handler,w
  2873  02BA  00A6               	movwf	_I2C_SlaveAddrInterruptHandler
  2874  02BB                     l320:
  2875  02BB  0008               	return
  2876  02BC                     __end_of_I2C_SlaveSetAddrIntHandler:
  2877                           
  2878                           	psect	text16
  2879  01F6                     __ptext16:	
  2880 ;; *************** function _I2C_SlaveOpen *****************
  2881 ;; Defined at:
  2882 ;;		line 317 in file "mcc_generated_files/i2c_slave.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      _Bool 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2896 ;;      Params:         0       0       0       0
  2897 ;;      Locals:         0       0       0       0
  2898 ;;      Temps:          0       1       0       0
  2899 ;;      Totals:         0       1       0       0
  2900 ;;Total ram usage:        1 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 6
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_I2C_Open
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _I2C_SlaveOpen
  2912  01F6                     _I2C_SlaveOpen:
  2913  01F6                     l1740:	
  2914                           ;incstack = 0
  2915                           ; Regs used in _I2C_SlaveOpen: [wreg+status,2+status,0]
  2916                           
  2917                           
  2918                           ;mcc_generated_files/i2c_slave.c: 319:     if(!SSP1CON1bits.SSPEN)
  2919  01F6  0024               	movlb	4	; select bank4
  2920  01F7  1A95               	btfsc	21,5	;volatile
  2921  01F8  29FA               	goto	u601
  2922  01F9  29FB               	goto	u600
  2923  01FA                     u601:
  2924  01FA  2A05               	goto	l351
  2925  01FB                     u600:
  2926  01FB                     l1742:
  2927                           
  2928                           ;mcc_generated_files/i2c_slave.c: 320:     {;mcc_generated_files/i2c_slave.c: 321:      
      +                             SSP1STAT = 0x40;
  2929  01FB  3040               	movlw	64
  2930  01FC  0094               	movwf	20	;volatile
  2931  01FD                     l1744:
  2932                           
  2933                           ;mcc_generated_files/i2c_slave.c: 322:         SSP1CON1 |= 0x06;
  2934  01FD  3006               	movlw	6
  2935  01FE  0020               	movlb	0	; select bank0
  2936  01FF  00B1               	movwf	??_I2C_SlaveOpen
  2937  0200  0831               	movf	??_I2C_SlaveOpen,w
  2938  0201  0024               	movlb	4	; select bank4
  2939  0202  0495               	iorwf	21,f	;volatile
  2940  0203                     l1746:
  2941                           
  2942                           ;mcc_generated_files/i2c_slave.c: 323:         SSP1CON2 = 0x00;
  2943  0203  0196               	clrf	22	;volatile
  2944  0204                     l1748:
  2945                           
  2946                           ;mcc_generated_files/i2c_slave.c: 324:         SSP1CON1bits.SSPEN = 1;
  2947  0204  1695               	bsf	21,5	;volatile
  2948  0205                     l351:
  2949  0205  0008               	return
  2950  0206                     __end_of_I2C_SlaveOpen:
  2951                           
  2952                           	psect	text17
  2953  02DD                     __ptext17:	
  2954 ;; *************** function _I2C_SlaveEnableIrq *****************
  2955 ;; Defined at:
  2956 ;;		line 348 in file "mcc_generated_files/i2c_slave.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		None
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2970 ;;      Params:         0       0       0       0
  2971 ;;      Locals:         0       0       0       0
  2972 ;;      Temps:          0       0       0       0
  2973 ;;      Totals:         0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 6
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_I2C_Open
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _I2C_SlaveEnableIrq
  2986  02DD                     _I2C_SlaveEnableIrq:
  2987  02DD                     l1514:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _I2C_SlaveEnableIrq: []
  2990                           
  2991                           
  2992                           ;mcc_generated_files/i2c_slave.c: 350:     PIE1bits.SSP1IE = 1;
  2993  02DD  0021               	movlb	1	; select bank1
  2994  02DE  1591               	bsf	17,3	;volatile
  2995  02DF                     l363:
  2996  02DF  0008               	return
  2997  02E0                     __end_of_I2C_SlaveEnableIrq:
  2998                           
  2999                           	psect	text18
  3000  02E0                     __ptext18:	
  3001 ;; *************** function _ADC_StartConversion *****************
  3002 ;; Defined at:
  3003 ;;		line 96 in file "mcc_generated_files/adc.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		None
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         0       0       0       0
  3018 ;;      Locals:         0       0       0       0
  3019 ;;      Temps:          0       0       0       0
  3020 ;;      Totals:         0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 6
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _ADC_StartConversion
  3033  02E0                     _ADC_StartConversion:
  3034  02E0                     l1554:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _ADC_StartConversion: []
  3037                           
  3038                           
  3039                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  3040  02E0  0021               	movlb	1	; select bank1
  3041  02E1  149D               	bsf	29,1	;volatile
  3042  02E2                     l127:
  3043  02E2  0008               	return
  3044  02E3                     __end_of_ADC_StartConversion:
  3045                           
  3046                           	psect	text19
  3047  0206                     __ptext19:	
  3048 ;; *************** function _ADC_SelectChannel *****************
  3049 ;; Defined at:
  3050 ;;		line 88 in file "mcc_generated_files/adc.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  channel         1    wreg     enum E3491
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  channel         1    1[BANK0 ] enum E3491
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3064 ;;      Params:         0       0       0       0
  3065 ;;      Locals:         0       1       0       0
  3066 ;;      Temps:          0       1       0       0
  3067 ;;      Totals:         0       2       0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 6
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _ADC_SelectChannel
  3080  0206                     _ADC_SelectChannel:
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3084                           ;ADC_SelectChannel@channel stored from wreg
  3085  0206  0020               	movlb	0	; select bank0
  3086  0207  00B2               	movwf	ADC_SelectChannel@channel
  3087  0208                     l1770:
  3088                           
  3089                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  3090  0208  0832               	movf	ADC_SelectChannel@channel,w
  3091  0209  00B1               	movwf	??_ADC_SelectChannel
  3092  020A  0DB1               	rlf	??_ADC_SelectChannel,f
  3093  020B  0DB1               	rlf	??_ADC_SelectChannel,f
  3094  020C  0021               	movlb	1	; select bank1
  3095  020D  081D               	movf	29,w	;volatile
  3096  020E  0020               	movlb	0	; select bank0
  3097  020F  0631               	xorwf	??_ADC_SelectChannel,w
  3098  0210  3983               	andlw	-125
  3099  0211  0631               	xorwf	??_ADC_SelectChannel,w
  3100  0212  0021               	movlb	1	; select bank1
  3101  0213  009D               	movwf	29	;volatile
  3102  0214                     l1772:
  3103                           
  3104                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  3105  0214  141D               	bsf	29,0	;volatile
  3106  0215                     l124:
  3107  0215  0008               	return
  3108  0216                     __end_of_ADC_SelectChannel:
  3109                           
  3110                           	psect	text20
  3111  0264                     __ptext20:	
  3112 ;; *************** function _ADC_IsConversionDone *****************
  3113 ;; Defined at:
  3114 ;;		line 103 in file "mcc_generated_files/adc.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      _Bool 
  3121 ;; Registers used:
  3122 ;;		wreg, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3128 ;;      Params:         0       0       0       0
  3129 ;;      Locals:         0       0       0       0
  3130 ;;      Temps:          0       0       0       0
  3131 ;;      Totals:         0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 6
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _ADC_IsConversionDone
  3144  0264                     _ADC_IsConversionDone:
  3145  0264                     l1556:	
  3146                           ;incstack = 0
  3147                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  3148                           
  3149                           
  3150                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  3151  0264  1003               	clrc
  3152  0265  0021               	movlb	1	; select bank1
  3153  0266  1C9D               	btfss	29,1	;volatile
  3154  0267  1403               	setc
  3155  0268  3000               	movlw	0
  3156  0269  3D09               	addwfc	9,w
  3157  026A                     l130:
  3158  026A  0008               	return
  3159  026B                     __end_of_ADC_IsConversionDone:
  3160                           
  3161                           	psect	intentry
  3162  0004                     __pintentry:	
  3163 ;; *************** function _INTERRUPT_InterruptManager *****************
  3164 ;; Defined at:
  3165 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3179 ;;      Params:         0       0       0       0
  3180 ;;      Locals:         0       0       0       0
  3181 ;;      Temps:          0       0       0       0
  3182 ;;      Totals:         0       0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 5
  3186 ;; This function calls:
  3187 ;;		Absolute function
  3188 ;;		_I2C_Isr
  3189 ;; This function is called by:
  3190 ;;		Interrupt level 1
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194  0004                     _INTERRUPT_InterruptManager:
  3195                           
  3196                           ;incstack = 0
  3197  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3198                           
  3199                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3200  0005  3180               	pagesel	$
  3201  0006                     i1l1608:
  3202                           
  3203                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3204  0006  1F0B               	btfss	11,6	;volatile
  3205  0007  2809               	goto	u42_21
  3206  0008  280A               	goto	u42_20
  3207  0009                     u42_21:
  3208  0009  2825               	goto	i1l33
  3209  000A                     u42_20:
  3210  000A                     i1l1610:
  3211                           
  3212                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  3213  000A  0021               	movlb	1	; select bank1
  3214  000B  1D92               	btfss	18,3	;volatile
  3215  000C  280E               	goto	u43_21
  3216  000D  280F               	goto	u43_20
  3217  000E                     u43_21:
  3218  000E  281A               	goto	i1l28
  3219  000F                     u43_20:
  3220  000F                     i1l1612:
  3221  000F  0020               	movlb	0	; select bank0
  3222  0010  1D92               	btfss	18,3	;volatile
  3223  0011  2813               	goto	u44_21
  3224  0012  2814               	goto	u44_20
  3225  0013                     u44_21:
  3226  0013  281A               	goto	i1l28
  3227  0014                     u44_20:
  3228  0014                     i1l1614:
  3229                           
  3230                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             MSSP_InterruptHandler();
  3231  0014  082D               	movf	_MSSP_InterruptHandler+1,w
  3232  0015  008A               	movwf	10
  3233  0016  082C               	movf	_MSSP_InterruptHandler,w
  3234  0017  000A               	callw
  3235  0018  3180               	pagesel	$
  3236                           
  3237                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3238  0019  2825               	goto	i1l33
  3239  001A                     i1l28:	
  3240                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3241                           
  3242  001A  0021               	movlb	1	; select bank1
  3243  001B  1D91               	btfss	17,3	;volatile
  3244  001C  281E               	goto	u45_21
  3245  001D  281F               	goto	u45_20
  3246  001E                     u45_21:
  3247  001E  2825               	goto	i1l29
  3248  001F                     u45_20:
  3249  001F                     i1l1616:
  3250  001F  0020               	movlb	0	; select bank0
  3251  0020  1D91               	btfss	17,3	;volatile
  3252  0021  2823               	goto	u46_21
  3253  0022  2824               	goto	u46_20
  3254  0023                     u46_21:
  3255  0023  2825               	goto	i1l29
  3256  0024                     u46_20:
  3257  0024  2814               	goto	i1l1614
  3258  0025                     i1l29:
  3259  0025                     i1l33:	
  3260                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  3261                           
  3262  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3263  0026  0009               	retfie
  3264  0027                     __end_of_INTERRUPT_InterruptManager:
  3265                           
  3266                           	psect	text22
  3267  0103                     __ptext22:	
  3268 ;; *************** function _I2C_Isr *****************
  3269 ;; Defined at:
  3270 ;;		line 167 in file "mcc_generated_files/i2c_slave.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3284 ;;      Params:         0       0       0       0
  3285 ;;      Locals:         0       0       0       0
  3286 ;;      Temps:          2       0       0       0
  3287 ;;      Totals:         2       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 4
  3291 ;; This function calls:
  3292 ;;		_I2C_SlaveAddrCallBack
  3293 ;;		_I2C_SlaveClearIrq
  3294 ;;		_I2C_SlaveIsAddr
  3295 ;;		_I2C_SlaveIsRead
  3296 ;;		_I2C_SlaveIsRxBufFull
  3297 ;;		_I2C_SlaveIsTxBufEmpty
  3298 ;;		_I2C_SlaveRdCallBack
  3299 ;;		_I2C_SlaveReleaseClock
  3300 ;;		_I2C_SlaveWrCallBack
  3301 ;; This function is called by:
  3302 ;;		_I2C_Open
  3303 ;;		_INTERRUPT_InterruptManager
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _I2C_Isr
  3309  0103                     _I2C_Isr:
  3310  0103                     i1l276:	
  3311                           ;incstack = 0
  3312                           ; Regs used in _I2C_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3313                           ;mcc_generated_files/i2c_slave.c: 169:      do { LATAbits.LATA4 = 1; } while(0);
  3314                           
  3315  0103  0022               	movlb	2	; select bank2
  3316  0104  160C               	bsf	12,4	;volatile
  3317  0105                     i1l1564:
  3318                           
  3319                           ;mcc_generated_files/i2c_slave.c: 172:     I2C_SlaveClearIrq();
  3320  0105  3182  22E6  3181   	fcall	_I2C_SlaveClearIrq
  3321  0108                     i1l1566:
  3322                           
  3323                           ;mcc_generated_files/i2c_slave.c: 176:     if(I2C_SlaveIsAddr())
  3324  0108  3182  2279  3181   	fcall	_I2C_SlaveIsAddr
  3325  010B  3A00               	xorlw	0
  3326  010C  1903               	skipnz
  3327  010D  290F               	goto	u36_21
  3328  010E  2910               	goto	u36_20
  3329  010F                     u36_21:
  3330  010F  2922               	goto	i1l1574
  3331  0110                     u36_20:
  3332  0110                     i1l1568:
  3333                           
  3334                           ;mcc_generated_files/i2c_slave.c: 177:     {;mcc_generated_files/i2c_slave.c: 178:      
      +                             if(I2C_SlaveIsRead())
  3335  0110  3182  22CC  3181   	fcall	_I2C_SlaveIsRead
  3336  0113  3A00               	xorlw	0
  3337  0114  1903               	skipnz
  3338  0115  2917               	goto	u37_21
  3339  0116  2918               	goto	u37_20
  3340  0117                     u37_21:
  3341  0117  291D               	goto	i1l1572
  3342  0118                     u37_20:
  3343  0118                     i1l1570:
  3344                           
  3345                           ;mcc_generated_files/i2c_slave.c: 179:         {;mcc_generated_files/i2c_slave.c: 180:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  3346  0118  3001               	movlw	1
  3347  0119  00F8               	movwf	??_I2C_Isr
  3348  011A  0878               	movf	??_I2C_Isr,w
  3349  011B  00F3               	movwf	_i2cSlaveState	;volatile
  3350                           
  3351                           ;mcc_generated_files/i2c_slave.c: 181:         }
  3352  011C  295C               	goto	i1l1598
  3353  011D                     i1l1572:
  3354                           
  3355                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  3356  011D  3002               	movlw	2
  3357  011E  00F8               	movwf	??_I2C_Isr
  3358  011F  0878               	movf	??_I2C_Isr,w
  3359  0120  00F3               	movwf	_i2cSlaveState	;volatile
  3360  0121  295C               	goto	i1l1598
  3361  0122                     i1l1574:
  3362                           
  3363                           ;mcc_generated_files/i2c_slave.c: 188:     {;mcc_generated_files/i2c_slave.c: 189:      
      +                             if(I2C_SlaveIsRead())
  3364  0122  3182  22CC  3181   	fcall	_I2C_SlaveIsRead
  3365  0125  3A00               	xorlw	0
  3366  0126  1903               	skipnz
  3367  0127  2929               	goto	u38_21
  3368  0128  292A               	goto	u38_20
  3369  0129                     u38_21:
  3370  0129  292F               	goto	i1l1578
  3371  012A                     u38_20:
  3372  012A                     i1l1576:
  3373                           
  3374                           ;mcc_generated_files/i2c_slave.c: 190:         {;mcc_generated_files/i2c_slave.c: 191:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  3375  012A  3003               	movlw	3
  3376  012B  00F8               	movwf	??_I2C_Isr
  3377  012C  0878               	movf	??_I2C_Isr,w
  3378  012D  00F3               	movwf	_i2cSlaveState	;volatile
  3379                           
  3380                           ;mcc_generated_files/i2c_slave.c: 192:         }
  3381  012E  295C               	goto	i1l1598
  3382  012F                     i1l1578:
  3383                           
  3384                           ;mcc_generated_files/i2c_slave.c: 194:         {;mcc_generated_files/i2c_slave.c: 195:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  3385  012F  3004               	movlw	4
  3386  0130  00F8               	movwf	??_I2C_Isr
  3387  0131  0878               	movf	??_I2C_Isr,w
  3388  0132  00F3               	movwf	_i2cSlaveState	;volatile
  3389  0133  295C               	goto	i1l1598
  3390  0134                     i1l1580:
  3391                           
  3392                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  3393  0134  3182  2230  3181   	fcall	_I2C_SlaveAddrCallBack
  3394  0137                     i1l1582:
  3395                           
  3396                           ;mcc_generated_files/i2c_slave.c: 203:             if(I2C_SlaveIsTxBufEmpty())
  3397  0137  3182  2272  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  3398  013A  3A00               	xorlw	0
  3399  013B  1903               	skipnz
  3400  013C  293E               	goto	u39_21
  3401  013D  293F               	goto	u39_20
  3402  013E                     u39_21:
  3403  013E  2972               	goto	i1l1600
  3404  013F                     u39_20:
  3405  013F                     i1l1584:
  3406                           
  3407                           ;mcc_generated_files/i2c_slave.c: 204:             {;mcc_generated_files/i2c_slave.c: 20
      +                          5:                 I2C_SlaveWrCallBack();
  3408  013F  3182  2216  3181   	fcall	_I2C_SlaveWrCallBack
  3409  0142  2972               	goto	i1l1600
  3410  0143                     i1l1586:
  3411                           
  3412                           ;mcc_generated_files/i2c_slave.c: 209:             I2C_SlaveAddrCallBack();
  3413  0143  3182  2230  3181   	fcall	_I2C_SlaveAddrCallBack
  3414                           
  3415                           ;mcc_generated_files/i2c_slave.c: 210:             break;
  3416  0146  2972               	goto	i1l1600
  3417  0147                     i1l1588:
  3418                           
  3419                           ;mcc_generated_files/i2c_slave.c: 212:             if(I2C_SlaveIsTxBufEmpty())
  3420  0147  3182  2272  3181   	fcall	_I2C_SlaveIsTxBufEmpty
  3421  014A  3A00               	xorlw	0
  3422  014B  1903               	skipnz
  3423  014C  294E               	goto	u40_21
  3424  014D  294F               	goto	u40_20
  3425  014E                     u40_21:
  3426  014E  2972               	goto	i1l1600
  3427  014F                     u40_20:
  3428  014F  293F               	goto	i1l1584
  3429  0150                     i1l1592:
  3430                           
  3431                           ;mcc_generated_files/i2c_slave.c: 218:             if(I2C_SlaveIsRxBufFull())
  3432  0150  3182  22D9  3181   	fcall	_I2C_SlaveIsRxBufFull
  3433  0153  3A00               	xorlw	0
  3434  0154  1903               	skipnz
  3435  0155  2957               	goto	u41_21
  3436  0156  2958               	goto	u41_20
  3437  0157                     u41_21:
  3438  0157  2972               	goto	i1l1600
  3439  0158                     u41_20:
  3440  0158                     i1l1594:
  3441                           
  3442                           ;mcc_generated_files/i2c_slave.c: 219:             {;mcc_generated_files/i2c_slave.c: 22
      +                          0:                 I2C_SlaveRdCallBack();
  3443  0158  3182  2223  3181   	fcall	_I2C_SlaveRdCallBack
  3444  015B  2972               	goto	i1l1600
  3445  015C                     i1l1598:
  3446  015C  0873               	movf	_i2cSlaveState,w	;volatile
  3447  015D  00F8               	movwf	??_I2C_Isr
  3448  015E  01F9               	clrf	??_I2C_Isr+1
  3449                           
  3450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 1, Range of values is 0 to 0
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            4     3 (average)
  3456                           ; direct_byte            8     6 (fixed)
  3457                           ; jumptable            260     6 (fixed)
  3458                           ;	Chosen strategy is simple_byte
  3459  015F  0879               	movf	??_I2C_Isr+1,w
  3460  0160  3A00               	xorlw	0	; case 0
  3461  0161  1903               	skipnz
  3462  0162  2964               	goto	i1l1880
  3463  0163  2972               	goto	i1l1600
  3464  0164                     i1l1880:
  3465                           
  3466                           ; Switch size 1, requested type "simple"
  3467                           ; Number of cases is 4, Range of values is 1 to 4
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte           13     7 (average)
  3471                           ; direct_byte           17     9 (fixed)
  3472                           ; jumptable            263     9 (fixed)
  3473                           ;	Chosen strategy is simple_byte
  3474  0164  0878               	movf	??_I2C_Isr,w
  3475  0165  3A01               	xorlw	1	; case 1
  3476  0166  1903               	skipnz
  3477  0167  2934               	goto	i1l1580
  3478  0168  3A03               	xorlw	3	; case 2
  3479  0169  1903               	skipnz
  3480  016A  2943               	goto	i1l1586
  3481  016B  3A01               	xorlw	1	; case 3
  3482  016C  1903               	skipnz
  3483  016D  2947               	goto	i1l1588
  3484  016E  3A07               	xorlw	7	; case 4
  3485  016F  1903               	skipnz
  3486  0170  2950               	goto	i1l1592
  3487  0171  2972               	goto	i1l1600
  3488  0172                     i1l1600:
  3489                           
  3490                           ;mcc_generated_files/i2c_slave.c: 226:     I2C_SlaveReleaseClock();
  3491  0172  3182  22E3  3181   	fcall	_I2C_SlaveReleaseClock
  3492  0175                     i1l294:
  3493  0175  0008               	return
  3494  0176                     __end_of_I2C_Isr:
  3495                           
  3496                           	psect	text23
  3497  0216                     __ptext23:	
  3498 ;; *************** function _I2C_SlaveWrCallBack *****************
  3499 ;; Defined at:
  3500 ;;		line 257 in file "mcc_generated_files/i2c_slave.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3514 ;;      Params:         0       0       0       0
  3515 ;;      Locals:         0       0       0       0
  3516 ;;      Temps:          0       0       0       0
  3517 ;;      Totals:         0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 3
  3521 ;; This function calls:
  3522 ;;		Absolute function
  3523 ;;		_CReI2C
  3524 ;;		_I2C_SlaveDefWrInterruptHandler
  3525 ;; This function is called by:
  3526 ;;		_I2C_Isr
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _I2C_SlaveWrCallBack
  3532  0216                     _I2C_SlaveWrCallBack:
  3533  0216                     i1l1534:	
  3534                           ;incstack = 0
  3535                           ; Regs used in _I2C_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  3536                           
  3537                           
  3538                           ;mcc_generated_files/i2c_slave.c: 259:     if (I2C_SlaveWrInterruptHandler)
  3539  0216  0020               	movlb	0	; select bank0
  3540  0217  0828               	movf	_I2C_SlaveWrInterruptHandler,w
  3541  0218  0429               	iorwf	_I2C_SlaveWrInterruptHandler+1,w
  3542  0219  1903               	btfsc	3,2
  3543  021A  2A1C               	goto	u34_21
  3544  021B  2A1D               	goto	u34_20
  3545  021C                     u34_21:
  3546  021C  2A22               	goto	i1l314
  3547  021D                     u34_20:
  3548  021D                     i1l1536:
  3549                           
  3550                           ;mcc_generated_files/i2c_slave.c: 260:     {;mcc_generated_files/i2c_slave.c: 261:      
      +                             I2C_SlaveWrInterruptHandler();
  3551  021D  0829               	movf	_I2C_SlaveWrInterruptHandler+1,w
  3552  021E  008A               	movwf	10
  3553  021F  0828               	movf	_I2C_SlaveWrInterruptHandler,w
  3554  0220  000A               	callw
  3555  0221  3182               	pagesel	$
  3556  0222                     i1l314:
  3557  0222  0008               	return
  3558  0223                     __end_of_I2C_SlaveWrCallBack:
  3559                           
  3560                           	psect	text24
  3561  01CF                     __ptext24:	
  3562 ;; *************** function _CReI2C *****************
  3563 ;; Defined at:
  3564 ;;		line 59 in file "main.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3578 ;;      Params:         0       0       0       0
  3579 ;;      Locals:         0       0       0       0
  3580 ;;      Temps:          0       0       0       0
  3581 ;;      Totals:         0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 2
  3585 ;; This function calls:
  3586 ;;		_I2C_Write
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;;		_I2C_SlaveWrCallBack
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _CReI2C
  3595  01CF                     _CReI2C:
  3596  01CF                     i1l1432:	
  3597                           ;incstack = 0
  3598                           ; Regs used in _CReI2C: [wreg+status,2+status,0+pclath+cstack]
  3599                           
  3600                           
  3601                           ;main.c: 69:      if(holadcr == 0){
  3602  01CF  0870               	movf	_holadcr,w
  3603  01D0  1D03               	btfss	3,2
  3604  01D1  29D3               	goto	u31_21
  3605  01D2  29D4               	goto	u31_20
  3606  01D3                     u31_21:
  3607  01D3  29DC               	goto	i1l1438
  3608  01D4                     u31_20:
  3609  01D4                     i1l1434:
  3610                           
  3611                           ;main.c: 70:         I2C_Write(ADRESH);
  3612  01D4  0021               	movlb	1	; select bank1
  3613  01D5  081C               	movf	28,w	;volatile
  3614  01D6  3182  22BC  3181   	fcall	_I2C_Write
  3615  01D9                     i1l1436:
  3616                           
  3617                           ;main.c: 71:         holadcr = 1;
  3618  01D9  01F0               	clrf	_holadcr
  3619  01DA  0AF0               	incf	_holadcr,f
  3620                           
  3621                           ;main.c: 72:      }
  3622  01DB  29E2               	goto	i1l1442
  3623  01DC                     i1l1438:
  3624                           
  3625                           ;main.c: 74:         I2C_Write(ADRESH);
  3626  01DC  0021               	movlb	1	; select bank1
  3627  01DD  081C               	movf	28,w	;volatile
  3628  01DE  3182  22BC  3181   	fcall	_I2C_Write
  3629  01E1                     i1l1440:
  3630                           
  3631                           ;main.c: 75:         holadcr = 0;
  3632  01E1  01F0               	clrf	_holadcr
  3633  01E2                     i1l1442:
  3634  01E2  0022               	movlb	2	; select bank2
  3635  01E3  120C               	bcf	12,4	;volatile
  3636  01E4                     i1l1444:
  3637                           
  3638                           ;main.c: 79:     Led1toggle = 0;
  3639  01E4  01F1               	clrf	_Led1toggle
  3640  01E5                     i1l467:
  3641  01E5  0008               	return
  3642  01E6                     __end_of_CReI2C:
  3643                           
  3644                           	psect	text25
  3645  02C2                     __ptext25:	
  3646 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  3647 ;; Defined at:
  3648 ;;		line 265 in file "mcc_generated_files/i2c_slave.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3662 ;;      Params:         0       0       0       0
  3663 ;;      Locals:         0       0       0       0
  3664 ;;      Temps:          0       0       0       0
  3665 ;;      Totals:         0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 1
  3669 ;; This function calls:
  3670 ;;		_I2C_SlaveSendTxData
  3671 ;; This function is called by:
  3672 ;;		_I2C_Open
  3673 ;;		_I2C_SlaveWrCallBack
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _I2C_SlaveDefWrInterruptHandler
  3679  02C2                     _I2C_SlaveDefWrInterruptHandler:
  3680  02C2                     i1l1428:	
  3681                           ;incstack = 0
  3682                           ; Regs used in _I2C_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  3683                           
  3684                           
  3685                           ;mcc_generated_files/i2c_slave.c: 266:     I2C_SlaveSendTxData(i2cWrData);
  3686  02C2  0875               	movf	_i2cWrData,w	;volatile
  3687  02C3  3182  22C7  3182   	fcall	_I2C_SlaveSendTxData
  3688  02C6                     i1l317:
  3689  02C6  0008               	return
  3690  02C7                     __end_of_I2C_SlaveDefWrInterruptHandler:
  3691                           
  3692                           	psect	text26
  3693  02BC                     __ptext26:	
  3694 ;; *************** function _I2C_Write *****************
  3695 ;; Defined at:
  3696 ;;		line 142 in file "mcc_generated_files/i2c_slave.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  data            1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  data            1    1[COMMON] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       0       0       0
  3711 ;;      Locals:         1       0       0       0
  3712 ;;      Temps:          0       0       0       0
  3713 ;;      Totals:         1       0       0       0
  3714 ;;Total ram usage:        1 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 1
  3717 ;; This function calls:
  3718 ;;		_I2C_SlaveSendTxData
  3719 ;; This function is called by:
  3720 ;;		_CReI2C
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _I2C_Write
  3726  02BC                     _I2C_Write:
  3727                           
  3728                           ;incstack = 0
  3729                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3730                           ;I2C_Write@data stored from wreg
  3731  02BC  00F7               	movwf	I2C_Write@data
  3732  02BD                     i1l1424:
  3733                           
  3734                           ;mcc_generated_files/i2c_slave.c: 142: void I2C_Write(uint8_t data);mcc_generated_files/
      +                          i2c_slave.c: 143: {;mcc_generated_files/i2c_slave.c: 144:     I2C_SlaveSendTxData(data);
  3735  02BD  0877               	movf	I2C_Write@data,w
  3736  02BE  3182  22C7  3182   	fcall	_I2C_SlaveSendTxData
  3737  02C1                     i1l261:
  3738  02C1  0008               	return
  3739  02C2                     __end_of_I2C_Write:
  3740                           
  3741                           	psect	text27
  3742  02C7                     __ptext27:	
  3743 ;; *************** function _I2C_SlaveSendTxData *****************
  3744 ;; Defined at:
  3745 ;;		line 398 in file "mcc_generated_files/i2c_slave.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  data            1    wreg     unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  data            1    0[COMMON] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3759 ;;      Params:         0       0       0       0
  3760 ;;      Locals:         1       0       0       0
  3761 ;;      Temps:          0       0       0       0
  3762 ;;      Totals:         1       0       0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_I2C_Write
  3769 ;;		_I2C_SlaveDefWrInterruptHandler
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _I2C_SlaveSendTxData
  3775  02C7                     _I2C_SlaveSendTxData:
  3776                           
  3777                           ;incstack = 0
  3778                           ; Regs used in _I2C_SlaveSendTxData: [wreg]
  3779                           ;I2C_SlaveSendTxData@data stored from wreg
  3780  02C7  00F6               	movwf	I2C_SlaveSendTxData@data
  3781  02C8                     i1l1418:
  3782                           
  3783                           ;mcc_generated_files/i2c_slave.c: 398: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 399: {;mcc_generated_files/i2c_sla
      +                          ve.c: 400:     SSP1BUF = data;
  3784  02C8  0876               	movf	I2C_SlaveSendTxData@data,w
  3785  02C9  0024               	movlb	4	; select bank4
  3786  02CA  0091               	movwf	17	;volatile
  3787  02CB                     i1l393:
  3788  02CB  0008               	return
  3789  02CC                     __end_of_I2C_SlaveSendTxData:
  3790                           
  3791                           	psect	text28
  3792  02E3                     __ptext28:	
  3793 ;; *************** function _I2C_SlaveReleaseClock *****************
  3794 ;; Defined at:
  3795 ;;		line 368 in file "mcc_generated_files/i2c_slave.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		None
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3809 ;;      Params:         0       0       0       0
  3810 ;;      Locals:         0       0       0       0
  3811 ;;      Temps:          0       0       0       0
  3812 ;;      Totals:         0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_I2C_Isr
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _I2C_SlaveReleaseClock
  3824  02E3                     _I2C_SlaveReleaseClock:
  3825  02E3                     i1l1546:	
  3826                           ;incstack = 0
  3827                           ; Regs used in _I2C_SlaveReleaseClock: []
  3828                           
  3829                           
  3830                           ;mcc_generated_files/i2c_slave.c: 370:     SSP1CON1bits.CKP = 1;
  3831  02E3  0024               	movlb	4	; select bank4
  3832  02E4  1615               	bsf	21,4	;volatile
  3833  02E5                     i1l375:
  3834  02E5  0008               	return
  3835  02E6                     __end_of_I2C_SlaveReleaseClock:
  3836                           
  3837                           	psect	text29
  3838  0223                     __ptext29:	
  3839 ;; *************** function _I2C_SlaveRdCallBack *****************
  3840 ;; Defined at:
  3841 ;;		line 240 in file "mcc_generated_files/i2c_slave.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3855 ;;      Params:         0       0       0       0
  3856 ;;      Locals:         0       0       0       0
  3857 ;;      Temps:          0       0       0       0
  3858 ;;      Totals:         0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 3
  3862 ;; This function calls:
  3863 ;;		Absolute function
  3864 ;;		_CWrI2C
  3865 ;;		_I2C_SlaveDefRdInterruptHandler
  3866 ;; This function is called by:
  3867 ;;		_I2C_Isr
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _I2C_SlaveRdCallBack
  3873  0223                     _I2C_SlaveRdCallBack:
  3874  0223                     i1l1542:	
  3875                           ;incstack = 0
  3876                           ; Regs used in _I2C_SlaveRdCallBack: [wreg+status,2+status,0+pclath+cstack]
  3877                           
  3878                           
  3879                           ;mcc_generated_files/i2c_slave.c: 242:     if (I2C_SlaveRdInterruptHandler)
  3880  0223  0020               	movlb	0	; select bank0
  3881  0224  082A               	movf	_I2C_SlaveRdInterruptHandler,w
  3882  0225  042B               	iorwf	_I2C_SlaveRdInterruptHandler+1,w
  3883  0226  1903               	btfsc	3,2
  3884  0227  2A29               	goto	u35_21
  3885  0228  2A2A               	goto	u35_20
  3886  0229                     u35_21:
  3887  0229  2A2F               	goto	i1l304
  3888  022A                     u35_20:
  3889  022A                     i1l1544:
  3890                           
  3891                           ;mcc_generated_files/i2c_slave.c: 243:     {;mcc_generated_files/i2c_slave.c: 244:      
      +                             I2C_SlaveRdInterruptHandler();
  3892  022A  082B               	movf	_I2C_SlaveRdInterruptHandler+1,w
  3893  022B  008A               	movwf	10
  3894  022C  082A               	movf	_I2C_SlaveRdInterruptHandler,w
  3895  022D  000A               	callw
  3896  022E  3182               	pagesel	$
  3897  022F                     i1l304:
  3898  022F  0008               	return
  3899  0230                     __end_of_I2C_SlaveRdCallBack:
  3900                           
  3901                           	psect	text30
  3902  0249                     __ptext30:	
  3903 ;; *************** function _CWrI2C *****************
  3904 ;; Defined at:
  3905 ;;		line 81 in file "main.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3919 ;;      Params:         0       0       0       0
  3920 ;;      Locals:         0       0       0       0
  3921 ;;      Temps:          1       0       0       0
  3922 ;;      Totals:         1       0       0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; Hardware stack levels required when called: 2
  3926 ;; This function calls:
  3927 ;;		_I2C_Read
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;;		_I2C_SlaveRdCallBack
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function _CWrI2C
  3936  0249                     _CWrI2C:
  3937  0249                     i1l1446:	
  3938                           ;incstack = 0
  3939                           ; Regs used in _CWrI2C: [wreg+pclath+cstack]
  3940                           
  3941                           
  3942                           ;main.c: 83:     cmd = I2C_Read();
  3943  0249  3182  22D5  3182   	fcall	_I2C_Read
  3944  024C  00F6               	movwf	??_CWrI2C
  3945  024D  0876               	movf	??_CWrI2C,w
  3946  024E  00F2               	movwf	_cmd
  3947  024F                     i1l1448:
  3948  024F  0022               	movlb	2	; select bank2
  3949  0250  120C               	bcf	12,4	;volatile
  3950  0251                     i1l1450:
  3951                           
  3952                           ;main.c: 86:     Led1toggle = 1;
  3953  0251  01F1               	clrf	_Led1toggle
  3954  0252  0AF1               	incf	_Led1toggle,f
  3955  0253                     i1l472:
  3956  0253  0008               	return
  3957  0254                     __end_of_CWrI2C:
  3958                           
  3959                           	psect	text31
  3960  026B                     __ptext31:	
  3961 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  3962 ;; Defined at:
  3963 ;;		line 248 in file "mcc_generated_files/i2c_slave.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3977 ;;      Params:         0       0       0       0
  3978 ;;      Locals:         0       0       0       0
  3979 ;;      Temps:          1       0       0       0
  3980 ;;      Totals:         1       0       0       0
  3981 ;;Total ram usage:        1 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 1
  3984 ;; This function calls:
  3985 ;;		_I2C_SlaveGetRxData
  3986 ;; This function is called by:
  3987 ;;		_I2C_Open
  3988 ;;		_I2C_SlaveRdCallBack
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           
  3993                           ;psect for function _I2C_SlaveDefRdInterruptHandler
  3994  026B                     _I2C_SlaveDefRdInterruptHandler:
  3995  026B                     i1l1426:	
  3996                           ;incstack = 0
  3997                           ; Regs used in _I2C_SlaveDefRdInterruptHandler: [wreg+pclath+cstack]
  3998                           
  3999                           
  4000                           ;mcc_generated_files/i2c_slave.c: 249:     i2cRdData = I2C_SlaveGetRxData();
  4001  026B  3182  22E9  3182   	fcall	_I2C_SlaveGetRxData
  4002  026E  00F6               	movwf	??_I2C_SlaveDefRdInterruptHandler
  4003  026F  0876               	movf	??_I2C_SlaveDefRdInterruptHandler,w
  4004  0270  00F4               	movwf	_i2cRdData	;volatile
  4005  0271                     i1l307:
  4006  0271  0008               	return
  4007  0272                     __end_of_I2C_SlaveDefRdInterruptHandler:
  4008                           
  4009                           	psect	text32
  4010  02D5                     __ptext32:	
  4011 ;; *************** function _I2C_Read *****************
  4012 ;; Defined at:
  4013 ;;		line 137 in file "mcc_generated_files/i2c_slave.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      unsigned char 
  4020 ;; Registers used:
  4021 ;;		wreg, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       0       0       0
  4028 ;;      Locals:         0       0       0       0
  4029 ;;      Temps:          0       0       0       0
  4030 ;;      Totals:         0       0       0       0
  4031 ;;Total ram usage:        0 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 1
  4034 ;; This function calls:
  4035 ;;		_I2C_SlaveGetRxData
  4036 ;; This function is called by:
  4037 ;;		_CWrI2C
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function _I2C_Read
  4043  02D5                     _I2C_Read:
  4044  02D5                     i1l1420:	
  4045                           ;incstack = 0
  4046                           ; Regs used in _I2C_Read: [wreg+pclath+cstack]
  4047                           
  4048                           
  4049                           ;mcc_generated_files/i2c_slave.c: 139:    return I2C_SlaveGetRxData();
  4050  02D5  3182  22E9  3182   	fcall	_I2C_SlaveGetRxData
  4051  02D8                     i1l258:
  4052  02D8  0008               	return
  4053  02D9                     __end_of_I2C_Read:
  4054                           
  4055                           	psect	text33
  4056  0272                     __ptext33:	
  4057 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  4058 ;; Defined at:
  4059 ;;		line 388 in file "mcc_generated_files/i2c_slave.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;		None
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      _Bool 
  4066 ;; Registers used:
  4067 ;;		wreg, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4073 ;;      Params:         0       0       0       0
  4074 ;;      Locals:         0       0       0       0
  4075 ;;      Temps:          0       0       0       0
  4076 ;;      Totals:         0       0       0       0
  4077 ;;Total ram usage:        0 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_I2C_Isr
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _I2C_SlaveIsTxBufEmpty
  4088  0272                     _I2C_SlaveIsTxBufEmpty:
  4089  0272                     i1l1530:	
  4090                           ;incstack = 0
  4091                           ; Regs used in _I2C_SlaveIsTxBufEmpty: [wreg+status,0]
  4092                           
  4093                           
  4094                           ;mcc_generated_files/i2c_slave.c: 390:     return !SSP1STATbits.BF;
  4095  0272  1003               	clrc
  4096  0273  0024               	movlb	4	; select bank4
  4097  0274  1C14               	btfss	20,0	;volatile
  4098  0275  1403               	setc
  4099  0276  3000               	movlw	0
  4100  0277  3D09               	addwfc	9,w
  4101  0278                     i1l387:
  4102  0278  0008               	return
  4103  0279                     __end_of_I2C_SlaveIsTxBufEmpty:
  4104                           
  4105                           	psect	text34
  4106  02D9                     __ptext34:	
  4107 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  4108 ;; Defined at:
  4109 ;;		line 393 in file "mcc_generated_files/i2c_slave.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      _Bool 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4123 ;;      Params:         0       0       0       0
  4124 ;;      Locals:         0       0       0       0
  4125 ;;      Temps:          0       0       0       0
  4126 ;;      Totals:         0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_I2C_Isr
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           
  4137                           ;psect for function _I2C_SlaveIsRxBufFull
  4138  02D9                     _I2C_SlaveIsRxBufFull:
  4139  02D9                     i1l1538:	
  4140                           ;incstack = 0
  4141                           ; Regs used in _I2C_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4142                           
  4143                           
  4144                           ;mcc_generated_files/i2c_slave.c: 395:     return SSP1STATbits.BF;
  4145  02D9  0024               	movlb	4	; select bank4
  4146  02DA  0814               	movf	20,w	;volatile
  4147  02DB  3901               	andlw	1
  4148  02DC                     i1l390:
  4149  02DC  0008               	return
  4150  02DD                     __end_of_I2C_SlaveIsRxBufFull:
  4151                           
  4152                           	psect	text35
  4153  02CC                     __ptext35:	
  4154 ;; *************** function _I2C_SlaveIsRead *****************
  4155 ;; Defined at:
  4156 ;;		line 358 in file "mcc_generated_files/i2c_slave.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      _Bool 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4170 ;;      Params:         0       0       0       0
  4171 ;;      Locals:         0       0       0       0
  4172 ;;      Temps:          0       0       0       0
  4173 ;;      Totals:         0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_I2C_Isr
  4180 ;;		_I2C_IsRead
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _I2C_SlaveIsRead
  4186  02CC                     _I2C_SlaveIsRead:
  4187  02CC                     i1l1516:	
  4188                           ;incstack = 0
  4189                           ; Regs used in _I2C_SlaveIsRead: [wreg+status,2+status,0]
  4190                           
  4191                           
  4192                           ;mcc_generated_files/i2c_slave.c: 360:     return (SSP1STATbits.R_nW);
  4193  02CC  0024               	movlb	4	; select bank4
  4194  02CD  0C14               	rrf	20,w	;volatile
  4195  02CE  0C89               	rrf	9,f
  4196  02CF  3901               	andlw	1
  4197  02D0                     i1l369:
  4198  02D0  0008               	return
  4199  02D1                     __end_of_I2C_SlaveIsRead:
  4200                           
  4201                           	psect	text36
  4202  0279                     __ptext36:	
  4203 ;; *************** function _I2C_SlaveIsAddr *****************
  4204 ;; Defined at:
  4205 ;;		line 353 in file "mcc_generated_files/i2c_slave.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      _Bool 
  4212 ;; Registers used:
  4213 ;;		wreg, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4219 ;;      Params:         0       0       0       0
  4220 ;;      Locals:         0       0       0       0
  4221 ;;      Temps:          0       0       0       0
  4222 ;;      Totals:         0       0       0       0
  4223 ;;Total ram usage:        0 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_I2C_Isr
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _I2C_SlaveIsAddr
  4234  0279                     _I2C_SlaveIsAddr:
  4235  0279                     i1l1522:	
  4236                           ;incstack = 0
  4237                           ; Regs used in _I2C_SlaveIsAddr: [wreg+status,0]
  4238                           
  4239                           
  4240                           ;mcc_generated_files/i2c_slave.c: 355:     return !(SSP1STATbits.D_nA);
  4241  0279  1003               	clrc
  4242  027A  0024               	movlb	4	; select bank4
  4243  027B  1E94               	btfss	20,5	;volatile
  4244  027C  1403               	setc
  4245  027D  3000               	movlw	0
  4246  027E  3D09               	addwfc	9,w
  4247  027F                     i1l366:
  4248  027F  0008               	return
  4249  0280                     __end_of_I2C_SlaveIsAddr:
  4250                           
  4251                           	psect	text37
  4252  02E6                     __ptext37:	
  4253 ;; *************** function _I2C_SlaveClearIrq *****************
  4254 ;; Defined at:
  4255 ;;		line 363 in file "mcc_generated_files/i2c_slave.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		None
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4269 ;;      Params:         0       0       0       0
  4270 ;;      Locals:         0       0       0       0
  4271 ;;      Temps:          0       0       0       0
  4272 ;;      Totals:         0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_I2C_Isr
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _I2C_SlaveClearIrq
  4284  02E6                     _I2C_SlaveClearIrq:
  4285  02E6                     i1l1520:	
  4286                           ;incstack = 0
  4287                           ; Regs used in _I2C_SlaveClearIrq: []
  4288                           
  4289                           
  4290                           ;mcc_generated_files/i2c_slave.c: 365:     PIR1bits.SSP1IF = 0;
  4291  02E6  0020               	movlb	0	; select bank0
  4292  02E7  1191               	bcf	17,3	;volatile
  4293  02E8                     i1l372:
  4294  02E8  0008               	return
  4295  02E9                     __end_of_I2C_SlaveClearIrq:
  4296                           
  4297                           	psect	text38
  4298  0230                     __ptext38:	
  4299 ;; *************** function _I2C_SlaveAddrCallBack *****************
  4300 ;; Defined at:
  4301 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4315 ;;      Params:         0       0       0       0
  4316 ;;      Locals:         0       0       0       0
  4317 ;;      Temps:          0       0       0       0
  4318 ;;      Totals:         0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used: 1
  4321 ;; Hardware stack levels required when called: 2
  4322 ;; This function calls:
  4323 ;;		Absolute function
  4324 ;;		_I2C_SlaveDefAddrInterruptHandler
  4325 ;; This function is called by:
  4326 ;;		_I2C_Isr
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           
  4331                           ;psect for function _I2C_SlaveAddrCallBack
  4332  0230                     _I2C_SlaveAddrCallBack:
  4333  0230                     i1l1526:	
  4334                           ;incstack = 0
  4335                           ; Regs used in _I2C_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4336                           
  4337                           
  4338                           ;mcc_generated_files/i2c_slave.c: 276:     if (I2C_SlaveAddrInterruptHandler) {
  4339  0230  0020               	movlb	0	; select bank0
  4340  0231  0826               	movf	_I2C_SlaveAddrInterruptHandler,w
  4341  0232  0427               	iorwf	_I2C_SlaveAddrInterruptHandler+1,w
  4342  0233  1903               	btfsc	3,2
  4343  0234  2A36               	goto	u33_21
  4344  0235  2A37               	goto	u33_20
  4345  0236                     u33_21:
  4346  0236  2A3C               	goto	i1l324
  4347  0237                     u33_20:
  4348  0237                     i1l1528:
  4349                           
  4350                           ;mcc_generated_files/i2c_slave.c: 277:         I2C_SlaveAddrInterruptHandler();
  4351  0237  0827               	movf	_I2C_SlaveAddrInterruptHandler+1,w
  4352  0238  008A               	movwf	10
  4353  0239  0826               	movf	_I2C_SlaveAddrInterruptHandler,w
  4354  023A  000A               	callw
  4355  023B  3182               	pagesel	$
  4356  023C                     i1l324:
  4357  023C  0008               	return
  4358  023D                     __end_of_I2C_SlaveAddrCallBack:
  4359                           
  4360                           	psect	text39
  4361  025C                     __ptext39:	
  4362 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  4363 ;; Defined at:
  4364 ;;		line 281 in file "mcc_generated_files/i2c_slave.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		wreg, pclath, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4378 ;;      Params:         0       0       0       0
  4379 ;;      Locals:         0       0       0       0
  4380 ;;      Temps:          1       0       0       0
  4381 ;;      Totals:         1       0       0       0
  4382 ;;Total ram usage:        1 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 1
  4385 ;; This function calls:
  4386 ;;		_I2C_SlaveGetRxData
  4387 ;; This function is called by:
  4388 ;;		_I2C_Open
  4389 ;;		_I2C_SlaveAddrCallBack
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _I2C_SlaveDefAddrInterruptHandler
  4395  025C                     _I2C_SlaveDefAddrInterruptHandler:
  4396  025C                     i1l1430:	
  4397                           ;incstack = 0
  4398                           ; Regs used in _I2C_SlaveDefAddrInterruptHandler: [wreg+pclath+cstack]
  4399                           
  4400                           
  4401                           ;mcc_generated_files/i2c_slave.c: 282:     i2cSlaveAddr = I2C_SlaveGetRxData();
  4402  025C  3182  22E9  3182   	fcall	_I2C_SlaveGetRxData
  4403  025F  00F6               	movwf	??_I2C_SlaveDefAddrInterruptHandler
  4404  0260  0876               	movf	??_I2C_SlaveDefAddrInterruptHandler,w
  4405  0261  0020               	movlb	0	; select bank0
  4406  0262  00B0               	movwf	_i2cSlaveAddr	;volatile
  4407  0263                     i1l327:
  4408  0263  0008               	return
  4409  0264                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  4410                           
  4411                           	psect	text40
  4412  02E9                     __ptext40:	
  4413 ;; *************** function _I2C_SlaveGetRxData *****************
  4414 ;; Defined at:
  4415 ;;		line 403 in file "mcc_generated_files/i2c_slave.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      unsigned char 
  4422 ;; Registers used:
  4423 ;;		wreg
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4429 ;;      Params:         0       0       0       0
  4430 ;;      Locals:         0       0       0       0
  4431 ;;      Temps:          0       0       0       0
  4432 ;;      Totals:         0       0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_I2C_Read
  4439 ;;		_I2C_SlaveDefRdInterruptHandler
  4440 ;;		_I2C_SlaveDefAddrInterruptHandler
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function _I2C_SlaveGetRxData
  4446  02E9                     _I2C_SlaveGetRxData:
  4447  02E9                     i1l1414:	
  4448                           ;incstack = 0
  4449                           ; Regs used in _I2C_SlaveGetRxData: [wreg]
  4450                           
  4451                           
  4452                           ;mcc_generated_files/i2c_slave.c: 405:     return SSP1BUF;
  4453  02E9  0024               	movlb	4	; select bank4
  4454  02EA  0811               	movf	17,w	;volatile
  4455  02EB                     i1l396:
  4456  02EB  0008               	return
  4457  02EC                     __end_of_I2C_SlaveGetRxData:
  4458  007E                     btemp	set	126	;btemp
  4459  007E                     int$flags	set	126
  4460  007E                     wtemp0	set	126
  4461                           
  4462                           	psect	config
  4463                           
  4464                           ;Config register CONFIG1 @ 0x8007
  4465                           ;	Oscillator Selection Bits
  4466                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4467                           ;	Watchdog Timer Enable
  4468                           ;	WDTE = OFF, WDT disabled
  4469                           ;	Power-up Timer Enable
  4470                           ;	PWRTE = OFF, PWRT disabled
  4471                           ;	MCLR Pin Function Select
  4472                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4473                           ;	Flash Program Memory Code Protection
  4474                           ;	CP = OFF, Program memory code protection is disabled
  4475                           ;	Brown-out Reset Enable
  4476                           ;	BOREN = ON, Brown-out Reset enabled
  4477                           ;	Clock Out Enable
  4478                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4479                           ;	Internal/External Switchover Mode
  4480                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4481                           ;	Fail-Safe Clock Monitor Enable
  4482                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4483  8007                     	org	32775
  4484  8007  3FE4               	dw	16356
  4485                           
  4486                           ;Config register CONFIG2 @ 0x8008
  4487                           ;	Flash Memory Self-Write Protection
  4488                           ;	WRT = OFF, Write protection off
  4489                           ;	Stack Overflow/Underflow Reset Enable
  4490                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4491                           ;	Brown-out Reset Voltage Selection
  4492                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4493                           ;	Low-Power Brown Out Reset
  4494                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4495                           ;	Low-Voltage Programming Enable
  4496                           ;	LVP = ON, Low-voltage programming enabled
  4497  8008                     	org	32776
  4498  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      4      21
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> CReI2C(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CReI2C(), Absolute function(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> CWrI2C(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CWrI2C(), Absolute function(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_Isr(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C_Isr
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData
    _CReI2C->_I2C_Write
    _I2C_Write->_I2C_SlaveSendTxData
    _I2C_SlaveRdCallBack->_CWrI2C
    _I2C_SlaveRdCallBack->_I2C_SlaveDefRdInterruptHandler
    _I2C_SlaveAddrCallBack->_I2C_SlaveDefAddrInterruptHandler

Critical Paths under _main in BANK0

    _main->_ADC_SelectChannel
    _main->_I2C_SlaveSetReadIntHandler
    _main->_I2C_SlaveSetWriteIntHandler
    _SYSTEM_Initialize->_I2C_Initialize
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1421
                                              2 BANK0      2     2      0
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                           _I2C_Open
         _I2C_SlaveSetReadIntHandler
        _I2C_SlaveSetWriteIntHandler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     968
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (1) _I2C_SlaveSetWriteIntHandler                          2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_SlaveSetReadIntHandler                           2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           0     0      0      66
                   Absolute function *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (4) _I2C_Isr                                              2     2      0      66
                                              2 COMMON     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveWrCallBack                                  0     0      0      66
                   Absolute function *
                             _CReI2C *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefWrInterruptHandler                       0     0      0      22
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (6) _CReI2C                                               0     0      0      44
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Write                                            1     1      0      44
                                              1 COMMON     1     1      0
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveSendTxData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveRdCallBack                                  0     0      0       0
                   Absolute function *
                             _CWrI2C *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefRdInterruptHandler                       1     1      0       0
                                              0 COMMON     1     1      0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (6) _CWrI2C                                               1     1      0       0
                                              0 COMMON     1     1      0
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (7) _I2C_Read                                             0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveAddrCallBack                                0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefAddrInterruptHandler                     1     1      0       0
                                              0 COMMON     1     1      0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_SlaveSetReadIntHandler
   _I2C_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _CWrI2C *
         _I2C_Read
           _I2C_SlaveGetRxData
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _CReI2C *
         _I2C_Write
           _I2C_SlaveSendTxData
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4      15       6       26.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 29 12:48:10 2021

                       __size_of_I2C_Write 0006                                         l62 01CE  
                                       l96 01F5                                         l99 028B  
                                      l102 02D4                                        l121 025B  
                                      l130 026A                                        l124 0215  
                                      l300 02A9                                        l310 0291  
                                      l127 02E2                                        l320 02BB  
                                      l330 0297                                        l340 02B5  
                                      l252 01B4                                        l500 00B1  
                                      l351 0205                                        l503 00B4  
                                      l360 029D                                        l249 0248  
                                      l506 00B7                                        l363 02DF  
                                      l357 02A3                                        l297 02AF  
                                      l490 00A8                                        l494 00AB  
                                      l479 0066                                        l497 00AE  
     __end_of_I2C_SlaveSetBusColIntHandler 02B6      __size_of_I2C_SlaveSetBusColIntHandler 0006  
             _I2C_SlaveSetBusColIntHandler 02B0                                        u600 01FB  
                                      u601 01FA                                        u610 0071  
                                      u611 0070                                        u700 00F2  
                                      u620 0082                                        u701 00EF  
                                      u621 0081                                        u630 008C  
                                      u631 0089                                        u714 00F4  
                                      u650 00A5                                        u651 00A2  
                                      u644 008E                                        u670 00E2  
                                      u671 00DF                                        u727 0046  
                                      u664 00A7                                        u737 0094  
                                      u690 00E9                                        u747 00FA  
                                      u691 00E8                                        u684 00E4  
                    ??_I2C_SlaveRdCallBack 0077                                        _cmd 0072  
                      _I2C_SlaveSendTxData 02C7              I2C_SlaveSetSlaveMask@maskAddr 0031  
                          __end_of_I2C_Isr 0176       __size_of_I2C_SlaveSetWrColIntHandler 0006  
                                      wreg 0009                        _I2C_SlaveWrCallBack 0216  
                                     l1514 02DD                                       l1460 01C0  
                                     l1452 01B5                                       l1462 01C3  
                                     l1454 01B9                                       l1464 01C5  
                                     l1456 01BC                                       l1480 02D1  
                                     l1800 0071                                       l1554 02E0  
                                     l1482 0254                                       l1466 01CA  
                                     l1458 01BE                                       l1802 007D  
                                     l1556 0264                                       l1740 01F6  
                                     l1484 0259                                       l1732 023D  
                                     l1476 0286                                       l1820 00E9  
                                     l1812 00BA                                       l1804 0082  
                                     l1742 01FB                                       l1734 0240  
                                     l1478 0289                                       l1822 00F4  
                                     l1814 00D7                                       l1806 008E  
                                     l1744 01FD                                       l1752 02A0  
                                     l1760 028C                                       l1736 0246  
                                     l1808 009B                                       l1816 00D8  
                                     l1770 0208                                       l1746 0203  
                                     l1762 02A4                                       l1754 029A  
                                     l1738 0247                                       l1818 00E4  
                                     l1772 0214                                       l1748 0204  
                                     l1764 02B6                                       l1756 02AA  
                                     l1780 003B                                       l1758 02B0  
                                     l1766 0292                                       l1774 0176  
                                     l1790 004F                                       l1782 003E  
                                     l1776 01B1                                       l1768 01E6  
                                     l1792 0053                                       l1784 0040  
                                     l1794 0056                                       l1786 004D  
                                     l1796 005E                                       l1788 004E  
                                     l1878 00C3                                       l1798 0069  
                                     _LATA 010C                                       _LATB 010D  
                                     _LATC 010E                                       i1l33 0025  
                                     i1l28 001A                                       i1l29 0025  
                                     _WPUA 020C                                       _WPUB 020D  
                  __end_of_I2C_SlaveIsAddr 0280                    __end_of_I2C_SlaveIsRead 02D1  
                                     _main 003B                                       _hres 002F  
                                     _lres 002E          I2C_SlaveSetAddrIntHandler@handler 0031  
                         __end_of_I2C_Read 02D9                                       fsr0h 0005  
                                     indf0 0000                                       fsr0l 0004  
                         __end_of_I2C_Open 01B5                                       btemp 007E  
                     ?_I2C_SlaveSendTxData 0076                                       start 0027  
                               _Led1toggle 0071                       ?_I2C_SlaveWrCallBack 0076  
           __size_of_I2C_SlaveAddrCallBack 000D          I2C_SlaveSetReadIntHandler@handler 0031  
            __end_of_I2C_SlaveAddrCallBack 023D             __size_of_OSCILLATOR_Initialize 0006  
            __end_of_OSCILLATOR_Initialize 028C   __end_of_I2C_SlaveDefAddrInterruptHandler 0264  
__size_of_I2C_SlaveDefAddrInterruptHandler 0008         ??_I2C_SlaveDefAddrInterruptHandler 0076  
        ?_I2C_SlaveDefAddrInterruptHandler 0076           _I2C_SlaveDefAddrInterruptHandler 025C  
                                    ?_main 0076                                      i1l304 022F  
                                    i1l314 0222                                      i1l307 0271  
                                    i1l324 023C                                      i1l261 02C1  
                                    i1l317 02C6                                      i1l327 0263  
                                    i1l258 02D8                                      i1l372 02E8  
                                    i1l276 0103                                      i1l366 027F  
                                    i1l390 02DC                                      i1l294 0175  
                                    i1l375 02E5                                      i1l472 0253  
                                    i1l369 02D0                                      i1l393 02CB  
                                    i1l387 0278                                      i1l467 01E5  
                                    i1l396 02EB                      _I2C_SlaveReleaseClock 02E3  
                                    u31_20 01D4                                      u31_21 01D3  
                                    u40_20 014F                                      u40_21 014E  
                                    u33_20 0237                                      u41_20 0158  
                                    u33_21 0236                                      u41_21 0157  
                                    u34_20 021D                                      u42_20 000A  
                                    u34_21 021C                                      u42_21 0009  
                                    u35_20 022A                                      u43_20 000F  
                                    u35_21 0229                                      u43_21 000E  
                                    u36_20 0110                                      u44_20 0014  
                                    u36_21 010F                                      u44_21 0013  
                                    u37_20 0118                                      u45_20 001F  
                                    u37_21 0117                                      u45_21 001E  
                                    u38_20 012A                                      u46_20 0024  
                                    u38_21 0129                                      u46_21 0023  
                                    u39_20 013F                                      u39_21 013E  
                                    _TRISA 008C                                      _TRISB 008D  
                                    _TRISC 008E              ?_I2C_SlaveSetBusColIntHandler 0031  
                   ??_I2C_SlaveIsRxBufFull 0076                             _WDT_Initialize 02D1  
          __size_of_I2C_SlaveSetIsrHandler 0006                          __end_of_I2C_Write 02C2  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                      ??_I2C_SlaveSendTxData 0076  
                    ??_I2C_SlaveWrCallBack 0078                      _I2C_SlaveSetSlaveAddr 029E  
                          __initialization 0029                      _I2C_SlaveSetSlaveMask 0298  
                   __size_of_I2C_SlaveOpen 0010                               __end_of_main 0103  
              ?_INTERRUPT_InterruptManager 0076                                  ??_I2C_Isr 0078  
                                   ??_main 0033                     __end_of_WDT_Initialize 02D5  
            __size_of_ADC_IsConversionDone 0007                _I2C_SlaveRdInterruptHandler 002A  
              _I2C_SlaveWrInterruptHandler 0028                 __end_of_I2C_SlaveEnableIrq 02E0  
               __end_of_I2C_SlaveGetRxData 02EC                                     _ADCON0 009D  
                                   _ADCON1 009E                                     _ADCON2 009F  
                                   _ADRESH 009C                                     _ADRESL 009B  
                                   _APFCON 011D                                     _ANSELA 018C  
                                   _ANSELB 018D                                     _ANSELC 018E  
                                   _BORCON 0116                                     i1l1420 02D5  
                                   i1l1414 02E9                                     i1l1430 025C  
                                   i1l1520 02E6                                     i1l1424 02BD  
                                   i1l1440 01E1                                     i1l1432 01CF  
                                   i1l1600 0172                                     i1l1522 0279  
                                   i1l1530 0272                                     i1l1426 026B  
                                   i1l1450 0251                                     i1l1418 02C8  
                                   i1l1442 01E2                                     i1l1434 01D4  
                                   i1l1610 000A                                     i1l1516 02CC  
                                   i1l1428 02C2                                     i1l1444 01E4  
                                   i1l1436 01D9                                     i1l1612 000F  
                                   i1l1526 0230                                     i1l1446 0249  
                                   i1l1542 0223                                     i1l1438 01DC  
                                   i1l1534 0216                                     i1l1614 0014  
                                   i1l1528 0237                                     i1l1448 024F  
                                   i1l1544 022A                                     i1l1536 021D  
                                   i1l1616 001F                                     i1l1608 0006  
                                   i1l1538 02D9                                     i1l1546 02E3  
                                   i1l1570 0118                                     i1l1580 0134  
                                   i1l1572 011D                                     i1l1564 0105  
                                   i1l1582 0137                                     i1l1574 0122  
                                   i1l1566 0108                                     i1l1592 0150  
                                   i1l1584 013F                                     i1l1576 012A  
                                   i1l1568 0110                                     i1l1594 0158  
                                   i1l1586 0143                                     i1l1578 012F  
                                   i1l1588 0147                                     i1l1598 015C  
                                   i1l1880 0164                                     _CReI2C 01CF  
                                   _OSCCON 0099                                     _CWrI2C 0249  
                         ?_I2C_SlaveIsAddr 0076                                     _WDTCON 0097  
                         ?_I2C_SlaveIsRead 0076                     _I2C_SlaveSetIsrHandler 02AA  
                  __size_of_I2C_Initialize 000C                     ?_I2C_SlaveReleaseClock 0076  
                  ??_I2C_SlaveIsTxBufEmpty 0076                                  ?_I2C_Read 0076  
                                ?_I2C_Open 0076        I2C_SlaveSetBusColIntHandler@handler 0031  
                          ?_WDT_Initialize 0076                              _I2C_SlaveOpen 01F6  
                        _SYSTEM_Initialize 01E6                    __end_of__initialization 0037  
       I2C_SlaveSetWrColIntHandler@handler 0031               ??_I2C_SlaveSetAddrIntHandler 007A  
                       ?_SYSTEM_Initialize 0076                     ?_I2C_SlaveSetSlaveAddr 0076  
                   ?_I2C_SlaveSetSlaveMask 0076               __size_of_ADC_StartConversion 0003  
                           __pcstackCOMMON 0076                        ??_SYSTEM_Initialize 007A  
           I2C_SlaveSetSlaveAddr@slaveAddr 0031               ??_I2C_SlaveSetReadIntHandler 007A  
                           _OPTION_REGbits 0095                                 ??_I2C_Read 0076  
                               ??_I2C_Open 007A                             ?_I2C_SlaveOpen 0076  
      __size_of_I2C_SlaveSetAddrIntHandler 0006                  __end_of_SYSTEM_Initialize 01F6  
                               __pbssBANK0 0020                                    ?_CReI2C 0076  
                                  ?_CWrI2C 0076        __end_of_I2C_SlaveSetWrColIntHandler 0298  
              _I2C_SlaveSetWrColIntHandler 0292        __size_of_I2C_SlaveSetReadIntHandler 0006  
                               __pmaintext 003B                                 __pintentry 0004  
              __end_of_I2C_SlaveRdCallBack 0230              ??_I2C_SlaveSetWrColIntHandler 007A  
                                  _I2C_Isr 0103                    __size_of_ADC_Initialize 0008  
                                  _SSP1ADD 0212                                    _SSP1BUF 0211  
                                  _SSP1MSK 0213                            __size_of_CReI2C 0017  
                          __size_of_CWrI2C 000B                                  _I2C_Write 02BC  
                     _ADC_InterruptHandler 0020                    I2C_SlaveSendTxData@data 0076  
                    _I2C_SlaveAddrCallBack 0230                             _I2C_Initialize 023D  
                                  __ptext1 01E6                                    __ptext2 02D1  
                                  __ptext3 01B5                                    __ptext4 0286  
                                  __ptext5 023D                                    __ptext6 0254  
                                  __ptext7 0176                                    __ptext8 028C  
                                  __ptext9 0292                            ??_I2C_SlaveOpen 0031  
                                  _holadcr 0070                      _OSCILLATOR_Initialize 0286  
                 ??_PIN_MANAGER_Initialize 007A              I2C_SlaveSetIsrHandler@handler 0031  
               __size_of_SYSTEM_Initialize 0010                                    clrloop0 0281  
              __end_of_I2C_SlaveSendTxData 02CC                       end_of_initialization 0037  
              __end_of_I2C_SlaveWrCallBack 0223              __size_of_I2C_SlaveIsRxBufFull 0004  
       __end_of_I2C_SlaveSetAddrIntHandler 02BC                 _I2C_SlaveSetAddrIntHandler 02B6  
                               ?_I2C_Write 0076               __end_of_ADC_IsConversionDone 026B  
                       _I2C_SlaveEnableIrq 02DD                         _I2C_SlaveGetRxData 02E9  
                  ?_I2C_SlaveSetIsrHandler 0031                               _i2cSlaveAddr 0030  
                   __end_of_I2C_Initialize 0249                    ??_I2C_SlaveReleaseClock 0076  
                      ?_I2C_SlaveEnableIrq 0076                        ?_I2C_SlaveGetRxData 0076  
       __end_of_I2C_SlaveSetReadIntHandler 02AA                 _I2C_SlaveSetReadIntHandler 02A4  
                         ??_WDT_Initialize 007A               ?_I2C_SlaveSetWriteIntHandler 0031  
           __size_of_I2C_SlaveIsTxBufEmpty 0007              __end_of_I2C_SlaveIsTxBufEmpty 0279  
                      _ADC_StartConversion 02E0                          __size_of_I2C_Read 0004  
                        __size_of_I2C_Open 003F                       ??_I2C_SlaveEnableIrq 007A  
                     ??_I2C_SlaveGetRxData 0076                    ??_I2C_SlaveSetSlaveAddr 007A  
                  ??_I2C_SlaveSetSlaveMask 007A                             __end_of_CReI2C 01E6  
                           __end_of_CWrI2C 0254             __end_of_I2C_SlaveSetIsrHandler 02B0  
                     ?_ADC_StartConversion 0076                   __size_of_I2C_SlaveIsAddr 0007  
                 __size_of_I2C_SlaveIsRead 0005                     ?_I2C_SlaveAddrCallBack 0076  
                          ?_I2C_Initialize 0076                             _ADC_Initialize 0254  
                                _i2cRdData 0074                     ?_OSCILLATOR_Initialize 0076  
                                _i2cWrData 0075                        start_initialization 0029  
          __size_of_PIN_MANAGER_Initialize 001A                                   ??_CReI2C 0078  
                                 ??_CWrI2C 0076                                ??_I2C_Write 0077  
                    ??_ADC_StartConversion 007A                     __end_of_ADC_Initialize 025C  
                                 ?_I2C_Isr 0076                                __pbssCOMMON 0070  
                                ___latbits 0001                              __pcstackBANK0 0031  
                     _ADC_IsConversionDone 0264       __size_of_I2C_SlaveSetWriteIntHandler 0006  
           ??_I2C_SlaveSetBusColIntHandler 007A                     _PIN_MANAGER_Initialize 01B5  
                        _ADC_SelectChannel 0206                            ?_ADC_Initialize 0076  
                       ?_ADC_SelectChannel 0076               ??_INTERRUPT_InterruptManager 007A  
                        ??_I2C_SlaveIsAddr 0076                          ??_I2C_SlaveIsRead 0076  
         ??_I2C_SlaveDefRdInterruptHandler 0076            ?_I2C_SlaveDefRdInterruptHandler 0076  
         ??_I2C_SlaveDefWrInterruptHandler 0077            ?_I2C_SlaveDefWrInterruptHandler 0076  
                                 _I2C_Read 02D5                                   _I2C_Open 0176  
                      ??_ADC_SelectChannel 0031               __size_of_I2C_SlaveRdCallBack 000D  
                    ?_ADC_IsConversionDone 0076                ?_I2C_SlaveSetAddrIntHandler 0031  
                                 _LATAbits 010C                                   _LATCbits 010E  
                                clear_ram0 0280                                   _PIE1bits 0091  
                                 _PIE2bits 0092                          _I2C_SlaveClearIrq 02E6  
                __end_of_ADC_SelectChannel 0216        __size_of_INTERRUPT_InterruptManager 0023  
                                 _PIR1bits 0011                                   _PIR2bits 0012  
                       ?_I2C_SlaveClearIrq 0076                                   _SSP1CON1 0215  
                                 _SSP1CON2 0216               __end_of_I2C_SlaveIsRxBufFull 02DD  
                                 _SSP1STAT 0214             __size_of_I2C_SlaveReleaseClock 0003  
              ?_I2C_SlaveSetReadIntHandler 0031              __end_of_I2C_SlaveReleaseClock 02E6  
                      ??_I2C_SlaveClearIrq 0076                           __size_of_I2C_Isr 0073  
                               _ADCON0bits 009D                   ADC_SelectChannel@channel 0032  
                    __end_of_I2C_SlaveOpen 0206          _I2C_SlaveDefWrColInterruptHandler 0000  
                __end_of_I2C_SlaveClearIrq 02E9             __size_of_I2C_SlaveSetSlaveAddr 0006  
            __end_of_I2C_SlaveSetSlaveAddr 02A4             __size_of_I2C_SlaveSetSlaveMask 0006  
            __end_of_I2C_SlaveSetSlaveMask 029E               __size_of_I2C_SlaveSendTxData 0005  
                         ??_I2C_Initialize 0031                    ??_I2C_SlaveAddrCallBack 0077  
             __size_of_I2C_SlaveWrCallBack 000D                              I2C_Write@data 0077  
                  ??_OSCILLATOR_Initialize 007A              _I2C_SlaveAddrInterruptHandler 0026  
       _I2C_SlaveDefBusColInterruptHandler 0000                     ??_ADC_IsConversionDone 007A  
           _I2C_SlaveWrColInterruptHandler 0022                                   __ptext10 0298  
                                 __ptext11 029E                                   __ptext20 0264  
                                 __ptext12 02A4                                   __ptext13 02AA  
                                 __ptext30 0249                                   __ptext22 0103  
                                 __ptext14 02B0                                   __ptext31 026B  
                                 __ptext23 0216                                   __ptext15 02B6  
                                 __ptext40 02E9                                   __ptext32 02D5  
                                 __ptext24 01CF                                   __ptext16 01F6  
                                 __ptext33 0272                                   __ptext25 02C2  
                                 __ptext17 02DD                                   __ptext34 02D9  
                                 __ptext26 02BC                                   __ptext18 02E0  
                                 __ptext35 02CC                                   __ptext27 02C7  
                                 __ptext19 0206                                   __ptext36 0279  
                                 __ptext28 02E3                                   __ptext37 02E6  
                                 __ptext29 0223                                   __ptext38 0230  
                                 __ptext39 025C                               _SSP1CON1bits 0215  
                             _SSP1CON2bits 0216                      _I2C_SlaveIsTxBufEmpty 0272  
              __size_of_I2C_SlaveEnableIrq 0003                __size_of_I2C_SlaveGetRxData 0003  
                            __size_of_main 00C8               ?_I2C_SlaveSetWrColIntHandler 0031  
               __size_of_ADC_SelectChannel 0010                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 0027                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 0214                                 _INTCONbits 000B  
                  __size_of_WDT_Initialize 0004                       _I2C_SlaveIsRxBufFull 02D9  
                                 intlevel1 0000                __end_of_ADC_StartConversion 02E3  
          _I2C_SlaveBusColInterruptHandler 0024                 __size_of_I2C_SlaveClearIrq 0003  
                  ?_PIN_MANAGER_Initialize 0076                        _I2C_SlaveRdCallBack 0223  
                         ??_ADC_Initialize 007A                            _I2C_SlaveIsAddr 0279  
                          _I2C_SlaveIsRead 02CC                              _i2cSlaveState 0073  
       I2C_SlaveSetWriteIntHandler@handler 0031        __end_of_I2C_SlaveSetWriteIntHandler 0292  
              _I2C_SlaveSetWriteIntHandler 028C                       ?_I2C_SlaveRdCallBack 0076  
                   ?_I2C_SlaveIsTxBufEmpty 0076              ??_I2C_SlaveSetWriteIntHandler 007A  
                 ??_I2C_SlaveSetIsrHandler 007A                      ?_I2C_SlaveIsRxBufFull 0076  
           __end_of_PIN_MANAGER_Initialize 01CF     __end_of_I2C_SlaveDefRdInterruptHandler 0272  
  __size_of_I2C_SlaveDefRdInterruptHandler 0007             _I2C_SlaveDefRdInterruptHandler 026B  
   __end_of_I2C_SlaveDefWrInterruptHandler 02C7    __size_of_I2C_SlaveDefWrInterruptHandler 0005  
           _I2C_SlaveDefWrInterruptHandler 02C2                      _MSSP_InterruptHandler 002C  
